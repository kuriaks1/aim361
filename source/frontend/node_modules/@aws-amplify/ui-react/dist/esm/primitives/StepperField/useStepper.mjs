import*as e from"react";import{isFunction as a}from"../shared/utils.mjs";const t=({max:e,min:a,step:t,value:n})=>{const s=(n-a)%t;return n=n-s+Math.round(s/t)*t,(n=Math.max(a,n))>e&&(n=e-(e-a)%t),n},n=({defaultValue:n=0,value:s,step:l=1,max:u=Number.MAX_SAFE_INTEGER,min:r=Number.MIN_SAFE_INTEGER,isDisabled:o,isReadOnly:c,onChange:m,onDecrease:i,onIncrease:h,onStepChange:p})=>{const d=void 0!==s;u=Math.max(r,u);const[b,v]=e.useState((()=>t({min:r,max:u,step:l,value:n}))),x=d?t({min:r,max:u,step:l,value:s}):b,C=o||c||x+l>u,I=o||c||x-l<r,[N,f]=e.useState(x),g=e.useCallback((e=>{f(e.target.value),"function"==typeof m&&m(e)}),[m]),D=e.useCallback((e=>{const n=parseFloat(e.target.value);if(isNaN(n))return;const s=t({min:r,max:u,step:l,value:n});d||v(s),a(p)&&p(s),f(s)}),[r,u,l,d,p]),E=e.useCallback((()=>{d||v(x+l),a(p)&&p(x+l),a(h)&&h(),f(x+l)}),[l,x,d,h,p]),k=e.useCallback((()=>{d||v(x-l),a(p)&&p(x-l),a(i)&&i(),f(x-l)}),[l,x,d,i,p]),M=e.useCallback((e=>{e.currentTarget.blur()}),[]);return{step:l,value:x,inputValue:N,handleDecrease:k,handleIncrease:E,handleOnBlur:D,handleOnChange:g,handleOnWheel:M,setInputValue:f,shouldDisableDecreaseButton:I,shouldDisableIncreaseButton:C}};export{n as useStepper};
