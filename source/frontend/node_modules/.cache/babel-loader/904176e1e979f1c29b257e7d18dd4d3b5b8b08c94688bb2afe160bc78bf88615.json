{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Amplify } from '@aws-amplify/core';\nimport { InternalPubSubClass } from './internals';\nvar PubSubClass = /** @class */function (_super) {\n  __extends(PubSubClass, _super);\n  function PubSubClass() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PubSubClass.prototype.getModuleName = function () {\n    return 'PubSub';\n  };\n  PubSubClass.prototype.subscribe = function (topics, options) {\n    return _super.prototype.subscribe.call(this, topics, options);\n  };\n  return PubSubClass;\n}(InternalPubSubClass);\nexport { PubSubClass };\nexport var PubSub = new PubSubClass();\nAmplify.register(PubSub);","map":{"version":3,"mappings":";AAKA,SACCA,OAAO,QAGD,mBAAmB;AAE1B,SAASC,mBAAmB,QAAQ,aAAa;AAOjD;EAAiCC;EAAjC;;EAWA;EAVQC,mCAAa,GAApB;IACC,OAAO,QAAQ;EAChB,CAAC;EAEDA,+BAAS,GAAT,UACCC,MAAyB,EACzBC,OAAyB;IAEzB,OAAOC,iBAAMC,SAAS,YAACH,MAAM,EAAEC,OAAO,CAAC;EACxC,CAAC;EACF,kBAAC;AAAD,CAAC,CAXgCJ,mBAAmB;;AAapD,OAAO,IAAMO,MAAM,GAAG,IAAIL,WAAW,EAAE;AACvCH,OAAO,CAACS,QAAQ,CAACD,MAAM,CAAC","names":["Amplify","InternalPubSubClass","__extends","PubSubClass","topics","options","_super","subscribe","PubSub","register"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-amplify/pubsub/src/PubSub.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// import '../Common/Polyfills';\nimport Observable from 'zen-observable-ts';\n\nimport {\n\tAmplify,\n\tbrowserOrNode,\n\tConsoleLogger as Logger,\n} from '@aws-amplify/core';\nimport { PubSubProvider, ProviderOptions } from './types';\nimport { InternalPubSubClass } from './internals';\n\ntype PubSubObservable = {\n\tprovider: PubSubProvider;\n\tvalue: string | Record<string, unknown>;\n};\n\nexport class PubSubClass extends InternalPubSubClass {\n\tpublic getModuleName() {\n\t\treturn 'PubSub';\n\t}\n\n\tsubscribe(\n\t\ttopics: string[] | string,\n\t\toptions?: ProviderOptions\n\t): Observable<PubSubObservable> {\n\t\treturn super.subscribe(topics, options);\n\t}\n}\n\nexport const PubSub = new PubSubClass();\nAmplify.register(PubSub);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}