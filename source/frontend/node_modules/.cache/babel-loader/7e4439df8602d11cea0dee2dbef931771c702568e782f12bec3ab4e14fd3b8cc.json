{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __read, __spread } from \"tslib\";\nvar lists = [];\nvar MethodEmbed = /** @class */function () {\n  function MethodEmbed(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this._originalMethod = context[methodName].bind(context);\n  }\n  MethodEmbed.add = function (context, methodName, methodOverride) {\n    getInstance(context, methodName).set(methodOverride);\n  };\n  MethodEmbed.remove = function (context, methodName) {\n    getInstance(context, methodName).remove();\n  };\n  MethodEmbed.prototype.set = function (methodOverride) {\n    var _this = this;\n    this.context[this.methodName] = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return methodOverride(_this._originalMethod.apply(_this, __spread(args)));\n    };\n  };\n  MethodEmbed.prototype.remove = function () {\n    this.context[this.methodName] = this._originalMethod;\n  };\n  return MethodEmbed;\n}();\nexport { MethodEmbed };\nfunction getInstance(context, methodName) {\n  var instance = lists.filter(function (h) {\n    return h.context === context && h.methodName === methodName;\n  })[0];\n  if (!instance) {\n    instance = new MethodEmbed(context, methodName);\n    lists.push(instance);\n  }\n  return instance;\n}","map":{"version":3,"mappings":"AAAA;AACA;;AAEA,IAAMA,KAAK,GAAkB,EAAE;AAE/B;EAcC,qBAAYC,OAAO,EAAEC,UAAU;IAC9B,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAE5B,IAAI,CAACC,eAAe,GAAGF,OAAO,CAACC,UAAU,CAAC,CAACE,IAAI,CAACH,OAAO,CAAC;EACzD;EAbOI,eAAG,GAAV,UAAWJ,OAAO,EAAEC,UAAU,EAAEI,cAAc;IAC7CC,WAAW,CAACN,OAAO,EAAEC,UAAU,CAAC,CAACM,GAAG,CAACF,cAAc,CAAC;EACrD,CAAC;EAEMD,kBAAM,GAAb,UAAcJ,OAAO,EAAEC,UAAU;IAChCK,WAAW,CAACN,OAAO,EAAEC,UAAU,CAAC,CAACO,MAAM,EAAE;EAC1C,CAAC;EASMJ,yBAAG,GAAV,UAAWC,cAAc;IAAzB;IACC,IAAI,CAACL,OAAO,CAAC,IAAI,CAACC,UAAU,CAAC,GAAG;MAAC;WAAA,UAAO,EAAPQ,qBAAO,EAAPA,IAAO;QAAPC;;MAChC,OAAOL,cAAc,CAACM,KAAI,CAACT,eAAe,OAApBS,KAAI,WAAoBD,IAAI,GAAE;IACrD,CAAC;EACF,CAAC;EAEMN,4BAAM,GAAb;IACC,IAAI,CAACJ,OAAO,CAAC,IAAI,CAACC,UAAU,CAAC,GAAG,IAAI,CAACC,eAAe;EACrD,CAAC;EACF,kBAAC;AAAD,CAAC,CA9BD;;AAgCA,SAASI,WAAWA,CAACN,OAAO,EAAEC,UAAU;EACvC,IAAIW,QAAQ,GAAGb,KAAK,CAACc,MAAM,CAC1B,WAAC;IAAI,QAAC,CAACb,OAAO,KAAKA,OAAO,IAAIc,CAAC,CAACb,UAAU,KAAKA,UAAU;EAApD,CAAoD,CACzD,CAAC,CAAC,CAAC;EAEJ,IAAI,CAACW,QAAQ,EAAE;IACdA,QAAQ,GAAG,IAAIR,WAAW,CAACJ,OAAO,EAAEC,UAAU,CAAC;IAC/CF,KAAK,CAACgB,IAAI,CAACH,QAAQ,CAAC;;EAGrB,OAAOA,QAAQ;AAChB","names":["lists","context","methodName","_originalMethod","bind","MethodEmbed","methodOverride","getInstance","set","remove","_i","args","_this","instance","filter","h","push"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-amplify/analytics/src/utils/MethodEmbed.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nconst lists: MethodEmbed[] = [];\n\nexport class MethodEmbed {\n\tpublic context;\n\tpublic methodName;\n\tprivate _originalMethod;\n\tprivate _bindedMethod;\n\n\tstatic add(context, methodName, methodOverride) {\n\t\tgetInstance(context, methodName).set(methodOverride);\n\t}\n\n\tstatic remove(context, methodName) {\n\t\tgetInstance(context, methodName).remove();\n\t}\n\n\tconstructor(context, methodName) {\n\t\tthis.context = context;\n\t\tthis.methodName = methodName;\n\n\t\tthis._originalMethod = context[methodName].bind(context);\n\t}\n\n\tpublic set(methodOverride) {\n\t\tthis.context[this.methodName] = (...args) => {\n\t\t\treturn methodOverride(this._originalMethod(...args));\n\t\t};\n\t}\n\n\tpublic remove() {\n\t\tthis.context[this.methodName] = this._originalMethod;\n\t}\n}\n\nfunction getInstance(context, methodName): MethodEmbed {\n\tlet instance = lists.filter(\n\t\th => h.context === context && h.methodName === methodName\n\t)[0];\n\n\tif (!instance) {\n\t\tinstance = new MethodEmbed(context, methodName);\n\t\tlists.push(instance);\n\t}\n\n\treturn instance;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}