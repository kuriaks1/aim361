{"ast":null,"code":"import { __awaiter as e, __generator as r } from \"tslib\";\nimport { createMachine as t, sendUpdate as n } from \"xstate\";\nimport { runValidators as s } from \"../../../validators/index.mjs\";\nimport { clearError as o, clearFormValues as a, clearTouched as i, clearUsername as d, clearValidationError as l, handleInput as c, handleSubmit as u, handleBlur as m, resendCode as p, setFieldErrors as g, setRemoteError as v, setUsername as f } from \"../actions.mjs\";\nimport { defaultServices as E } from \"../defaultServices.mjs\";\nfunction h(h) {\n  var w = h.services;\n  return t({\n    id: \"resetPasswordActor\",\n    initial: \"init\",\n    predictableActionArguments: !0,\n    states: {\n      init: {\n        always: [{\n          target: \"confirmResetPassword\",\n          cond: \"shouldAutoConfirmReset\",\n          actions: \"resendCode\"\n        }, {\n          target: \"resetPassword\"\n        }]\n      },\n      resetPassword: {\n        initial: \"edit\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearTouched\"],\n        states: {\n          edit: {\n            entry: \"sendUpdate\",\n            on: {\n              SUBMIT: {\n                actions: \"handleSubmit\",\n                target: \"submit\"\n              },\n              CHANGE: {\n                actions: \"handleInput\"\n              },\n              BLUR: {\n                actions: \"handleBlur\"\n              }\n            }\n          },\n          submit: {\n            tags: [\"pending\"],\n            entry: [\"sendUpdate\", \"setUsername\", \"clearError\"],\n            invoke: {\n              src: \"resetPassword\",\n              onDone: {\n                target: \"#resetPasswordActor.confirmResetPassword\"\n              },\n              onError: {\n                actions: [\"setRemoteError\"],\n                target: \"edit\"\n              }\n            }\n          }\n        }\n      },\n      confirmResetPassword: {\n        type: \"parallel\",\n        exit: [\"clearFormValues\", \"clearError\", \"clearUsername\", \"clearTouched\"],\n        states: {\n          validation: {\n            initial: \"pending\",\n            states: {\n              pending: {\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"valid\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"invalid\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              valid: {\n                entry: \"sendUpdate\"\n              },\n              invalid: {\n                entry: \"sendUpdate\"\n              }\n            },\n            on: {\n              CHANGE: {\n                actions: \"handleInput\",\n                target: \".pending\"\n              },\n              BLUR: {\n                actions: \"handleBlur\",\n                target: \".pending\"\n              }\n            }\n          },\n          submission: {\n            initial: \"idle\",\n            states: {\n              idle: {\n                entry: \"sendUpdate\",\n                on: {\n                  SUBMIT: {\n                    actions: \"handleSubmit\",\n                    target: \"validate\"\n                  },\n                  RESEND: \"resendCode\",\n                  CHANGE: {\n                    actions: \"handleInput\"\n                  },\n                  BLUR: {\n                    actions: \"handleBlur\"\n                  }\n                }\n              },\n              validate: {\n                entry: \"sendUpdate\",\n                invoke: {\n                  src: \"validateFields\",\n                  onDone: {\n                    target: \"pending\",\n                    actions: \"clearValidationError\"\n                  },\n                  onError: {\n                    target: \"idle\",\n                    actions: \"setFieldErrors\"\n                  }\n                }\n              },\n              resendCode: {\n                tags: [\"pending\"],\n                entry: [\"clearError\", \"sendUpdate\"],\n                invoke: {\n                  src: \"resetPassword\",\n                  onDone: {\n                    target: \"idle\"\n                  },\n                  onError: {\n                    actions: \"setRemoteError\",\n                    target: \"idle\"\n                  }\n                }\n              },\n              pending: {\n                tags: [\"pending\"],\n                entry: [\"clearError\", \"sendUpdate\"],\n                invoke: {\n                  src: \"confirmResetPassword\",\n                  onDone: {\n                    actions: \"clearUsername\",\n                    target: \"#resetPasswordActor.resolved\"\n                  },\n                  onError: {\n                    actions: \"setRemoteError\",\n                    target: \"idle\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      resolved: {\n        type: \"final\"\n      }\n    }\n  }, {\n    actions: {\n      clearError: o,\n      clearFormValues: a,\n      clearTouched: i,\n      clearUsername: d,\n      clearValidationError: l,\n      handleInput: c,\n      handleSubmit: u,\n      handleBlur: m,\n      resendCode: p,\n      setFieldErrors: g,\n      setRemoteError: v,\n      setUsername: f,\n      sendUpdate: n()\n    },\n    guards: {\n      shouldAutoConfirmReset: function (e, r) {\n        return !(!e.intent || \"confirmPasswordReset\" !== e.intent);\n      }\n    },\n    services: {\n      resetPassword: function (t) {\n        return e(this, void 0, void 0, function () {\n          var e;\n          return r(this, function (r) {\n            return e = t.username, [2, w.handleForgotPassword(e)];\n          });\n        });\n      },\n      confirmResetPassword: function (t) {\n        return e(this, void 0, void 0, function () {\n          var e, n, s, o;\n          return r(this, function (r) {\n            return e = t.username, n = t.formValues, s = n.confirmation_code, o = n.password, [2, w.handleForgotPasswordSubmit({\n              username: e,\n              code: s,\n              password: o\n            })];\n          });\n        });\n      },\n      validateFields: function (t, n) {\n        return e(this, void 0, void 0, function () {\n          return r(this, function (e) {\n            return [2, s(t.formValues, t.touched, t.passwordSettings, [E.validateFormPassword, E.validateConfirmPassword])];\n          });\n        });\n      }\n    }\n  });\n}\nexport { h as resetPasswordActor };","map":{"version":3,"names":["__awaiter","e","__generator","r","createMachine","t","sendUpdate","n","runValidators","s","clearError","o","clearFormValues","a","clearTouched","i","clearUsername","d","clearValidationError","l","handleInput","c","handleSubmit","u","handleBlur","m","resendCode","p","setFieldErrors","g","setRemoteError","v","setUsername","f","defaultServices","E","h","w","services","id","initial","predictableActionArguments","states","init","always","target","cond","actions","resetPassword","exit","edit","entry","on","SUBMIT","CHANGE","BLUR","submit","tags","invoke","src","onDone","onError","confirmResetPassword","type","validation","pending","valid","invalid","submission","idle","RESEND","validate","resolved","guards","shouldAutoConfirmReset","intent","username","handleForgotPassword","formValues","confirmation_code","password","handleForgotPasswordSubmit","code","validateFields","touched","passwordSettings","validateFormPassword","validateConfirmPassword","resetPasswordActor"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-amplify/ui/dist/esm/machines/authenticator/actors/resetPassword.mjs"],"sourcesContent":["import{__awaiter as e,__generator as r}from\"tslib\";import{createMachine as t,sendUpdate as n}from\"xstate\";import{runValidators as s}from\"../../../validators/index.mjs\";import{clearError as o,clearFormValues as a,clearTouched as i,clearUsername as d,clearValidationError as l,handleInput as c,handleSubmit as u,handleBlur as m,resendCode as p,setFieldErrors as g,setRemoteError as v,setUsername as f}from\"../actions.mjs\";import{defaultServices as E}from\"../defaultServices.mjs\";function h(h){var w=h.services;return t({id:\"resetPasswordActor\",initial:\"init\",predictableActionArguments:!0,states:{init:{always:[{target:\"confirmResetPassword\",cond:\"shouldAutoConfirmReset\",actions:\"resendCode\"},{target:\"resetPassword\"}]},resetPassword:{initial:\"edit\",exit:[\"clearFormValues\",\"clearError\",\"clearTouched\"],states:{edit:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"submit\"},CHANGE:{actions:\"handleInput\"},BLUR:{actions:\"handleBlur\"}}},submit:{tags:[\"pending\"],entry:[\"sendUpdate\",\"setUsername\",\"clearError\"],invoke:{src:\"resetPassword\",onDone:{target:\"#resetPasswordActor.confirmResetPassword\"},onError:{actions:[\"setRemoteError\"],target:\"edit\"}}}}},confirmResetPassword:{type:\"parallel\",exit:[\"clearFormValues\",\"clearError\",\"clearUsername\",\"clearTouched\"],states:{validation:{initial:\"pending\",states:{pending:{invoke:{src:\"validateFields\",onDone:{target:\"valid\",actions:\"clearValidationError\"},onError:{target:\"invalid\",actions:\"setFieldErrors\"}}},valid:{entry:\"sendUpdate\"},invalid:{entry:\"sendUpdate\"}},on:{CHANGE:{actions:\"handleInput\",target:\".pending\"},BLUR:{actions:\"handleBlur\",target:\".pending\"}}},submission:{initial:\"idle\",states:{idle:{entry:\"sendUpdate\",on:{SUBMIT:{actions:\"handleSubmit\",target:\"validate\"},RESEND:\"resendCode\",CHANGE:{actions:\"handleInput\"},BLUR:{actions:\"handleBlur\"}}},validate:{entry:\"sendUpdate\",invoke:{src:\"validateFields\",onDone:{target:\"pending\",actions:\"clearValidationError\"},onError:{target:\"idle\",actions:\"setFieldErrors\"}}},resendCode:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"resetPassword\",onDone:{target:\"idle\"},onError:{actions:\"setRemoteError\",target:\"idle\"}}},pending:{tags:[\"pending\"],entry:[\"clearError\",\"sendUpdate\"],invoke:{src:\"confirmResetPassword\",onDone:{actions:\"clearUsername\",target:\"#resetPasswordActor.resolved\"},onError:{actions:\"setRemoteError\",target:\"idle\"}}}}}}},resolved:{type:\"final\"}}},{actions:{clearError:o,clearFormValues:a,clearTouched:i,clearUsername:d,clearValidationError:l,handleInput:c,handleSubmit:u,handleBlur:m,resendCode:p,setFieldErrors:g,setRemoteError:v,setUsername:f,sendUpdate:n()},guards:{shouldAutoConfirmReset:function(e,r){return!(!e.intent||\"confirmPasswordReset\"!==e.intent)}},services:{resetPassword:function(t){return e(this,void 0,void 0,(function(){var e;return r(this,(function(r){return e=t.username,[2,w.handleForgotPassword(e)]}))}))},confirmResetPassword:function(t){return e(this,void 0,void 0,(function(){var e,n,s,o;return r(this,(function(r){return e=t.username,n=t.formValues,s=n.confirmation_code,o=n.password,[2,w.handleForgotPasswordSubmit({username:e,code:s,password:o})]}))}))},validateFields:function(t,n){return e(this,void 0,void 0,(function(){return r(this,(function(e){return[2,s(t.formValues,t.touched,t.passwordSettings,[E.validateFormPassword,E.validateConfirmPassword])]}))}))}}})}export{h as resetPasswordActor};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}