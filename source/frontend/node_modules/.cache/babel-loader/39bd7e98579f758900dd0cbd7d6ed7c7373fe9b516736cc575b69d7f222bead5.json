{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DescribeProjectVersionsRequest, DescribeProjectVersionsResponse } from \"../models/models_0\";\nimport { deserializeAws_json1_1DescribeProjectVersionsCommand, serializeAws_json1_1DescribeProjectVersionsCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Lists and describes the models in an Amazon Rekognition Custom Labels project. You\n *          can specify up to 10 model versions in <code>ProjectVersionArns</code>. If\n *          you don't specify a value, descriptions for all models are returned.</p>\n *          <p>This operation requires permissions to perform the <code>rekognition:DescribeProjectVersions</code>\n *             action.</p>\n */\nvar DescribeProjectVersionsCommand = /** @class */function (_super) {\n  __extends(DescribeProjectVersionsCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function DescribeProjectVersionsCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  DescribeProjectVersionsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"RekognitionClient\";\n    var commandName = \"DescribeProjectVersionsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DescribeProjectVersionsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeProjectVersionsResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  DescribeProjectVersionsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1DescribeProjectVersionsCommand(input, context);\n  };\n  DescribeProjectVersionsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1DescribeProjectVersionsCommand(output, context);\n  };\n  return DescribeProjectVersionsCommand;\n}($Command);\nexport { DescribeProjectVersionsCommand };","map":{"version":3,"mappings":";AACA,SAASA,8BAA8B,EAAEC,+BAA+B,QAAQ,oBAAoB;AACpG,SACEC,oDAAoD,EACpDC,kDAAkD,QAC7C,0BAA0B;AACjC,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;;;;AAOA;EAAoDC;EAKlD;EACA;EAEA,wCAAqBC,KAA0C;IAA/D;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,0DAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAA8C,EAC9CC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IAEzF,IAAMC,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,mBAAmB;IACtC,IAAMC,WAAW,GAAG,gCAAgC;IACpD,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAEzB,8BAA8B,CAAC0B,kBAAkB;MAC1EC,wBAAwB,EAAE1B,+BAA+B,CAACyB;KAC3D;IACO,kBAAc,GAAKb,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACS,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEf,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,kDAAS,GAAjB,UAAkBH,KAA0C,EAAEuB,OAAuB;IACnF,OAAO5B,kDAAkD,CAACK,KAAK,EAAEuB,OAAO,CAAC;EAC3E,CAAC;EAEOpB,oDAAW,GAAnB,UAAoBqB,MAAsB,EAAED,OAAuB;IACjE,OAAO7B,oDAAoD,CAAC8B,MAAM,EAAED,OAAO,CAAC;EAC9E,CAAC;EAIH,qCAAC;AAAD,CAAC,CAtDmDzB,QAAQ","names":["DescribeProjectVersionsRequest","DescribeProjectVersionsResponse","deserializeAws_json1_1DescribeProjectVersionsCommand","serializeAws_json1_1DescribeProjectVersionsCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","DescribeProjectVersionsCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","resolve","request","handle","context","output"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-sdk/client-rekognition/commands/DescribeProjectVersionsCommand.ts"],"sourcesContent":["import { RekognitionClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../RekognitionClient\";\nimport { DescribeProjectVersionsRequest, DescribeProjectVersionsResponse } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DescribeProjectVersionsCommand,\n  serializeAws_json1_1DescribeProjectVersionsCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DescribeProjectVersionsCommandInput = DescribeProjectVersionsRequest;\nexport type DescribeProjectVersionsCommandOutput = DescribeProjectVersionsResponse & __MetadataBearer;\n\n/**\n * <p>Lists and describes the models in an Amazon Rekognition Custom Labels project. You\n *          can specify up to 10 model versions in <code>ProjectVersionArns</code>. If\n *          you don't specify a value, descriptions for all models are returned.</p>\n *          <p>This operation requires permissions to perform the <code>rekognition:DescribeProjectVersions</code>\n *             action.</p>\n */\nexport class DescribeProjectVersionsCommand extends $Command<\n  DescribeProjectVersionsCommandInput,\n  DescribeProjectVersionsCommandOutput,\n  RekognitionClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DescribeProjectVersionsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: RekognitionClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DescribeProjectVersionsCommandInput, DescribeProjectVersionsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"RekognitionClient\";\n    const commandName = \"DescribeProjectVersionsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DescribeProjectVersionsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DescribeProjectVersionsResponse.filterSensitiveLog,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DescribeProjectVersionsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DescribeProjectVersionsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DescribeProjectVersionsCommandOutput> {\n    return deserializeAws_json1_1DescribeProjectVersionsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}