{"ast":null,"code":"import { __read, __values } from \"tslib\";\nexport function parseQueryString(querystring) {\n  var e_1, _a;\n  var query = {};\n  querystring = querystring.replace(/^\\?/, \"\");\n  if (querystring) {\n    try {\n      for (var _b = __values(querystring.split(\"&\")), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var pair = _c.value;\n        var _d = __read(pair.split(\"=\"), 2),\n          key = _d[0],\n          _e = _d[1],\n          value = _e === void 0 ? null : _e;\n        key = decodeURIComponent(key);\n        if (value) {\n          value = decodeURIComponent(value);\n        }\n        if (!(key in query)) {\n          query[key] = value;\n        } else if (Array.isArray(query[key])) {\n          query[key].push(value);\n        } else {\n          query[key] = [query[key], value];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  }\n  return query;\n}","map":{"version":3,"mappings":";AAEA,OAAM,SAAUA,gBAAgBA,CAACC,WAAmB;;EAClD,IAAMC,KAAK,GAAsB,EAAE;EACnCD,WAAW,GAAGA,WAAW,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAE5C,IAAIF,WAAW,EAAE;;MACf,KAAmB,6BAAW,CAACG,KAAK,CAAC,GAAG,CAAC,6CAAE;QAAtC,IAAMC,IAAI;QACT,gBAAsBA,IAAI,CAACD,KAAK,CAAC,GAAG,CAAC;UAApCE,GAAG;UAAEC,UAAY;UAAZC,KAAK,mBAAG,IAAI,KAAmB;QACzCF,GAAG,GAAGG,kBAAkB,CAACH,GAAG,CAAC;QAC7B,IAAIE,KAAK,EAAE;UACTA,KAAK,GAAGC,kBAAkB,CAACD,KAAK,CAAC;;QAEnC,IAAI,EAAEF,GAAG,IAAIJ,KAAK,CAAC,EAAE;UACnBA,KAAK,CAACI,GAAG,CAAC,GAAGE,KAAK;SACnB,MAAM,IAAIE,KAAK,CAACC,OAAO,CAACT,KAAK,CAACI,GAAG,CAAC,CAAC,EAAE;UACnCJ,KAAK,CAACI,GAAG,CAAmB,CAACM,IAAI,CAACJ,KAAe,CAAC;SACpD,MAAM;UACLN,KAAK,CAACI,GAAG,CAAC,GAAG,CAACJ,KAAK,CAACI,GAAG,CAAW,EAAEE,KAAe,CAAC;;;;;;;;;;;;;;;EAK1D,OAAON,KAAK;AACd","names":["parseQueryString","querystring","query","replace","split","pair","key","_e","value","decodeURIComponent","Array","isArray","push"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-sdk/querystring-parser/src/index.ts"],"sourcesContent":["import { QueryParameterBag } from \"@aws-sdk/types\";\n\nexport function parseQueryString(querystring: string): QueryParameterBag {\n  const query: QueryParameterBag = {};\n  querystring = querystring.replace(/^\\?/, \"\");\n\n  if (querystring) {\n    for (const pair of querystring.split(\"&\")) {\n      let [key, value = null] = pair.split(\"=\");\n      key = decodeURIComponent(key);\n      if (value) {\n        value = decodeURIComponent(value);\n      }\n      if (!(key in query)) {\n        query[key] = value;\n      } else if (Array.isArray(query[key])) {\n        (query[key] as Array<string>).push(value as string);\n      } else {\n        query[key] = [query[key] as string, value as string];\n      }\n    }\n  }\n\n  return query;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}