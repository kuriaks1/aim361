{"ast":null,"code":"import { ConsoleLogger } from '@aws-amplify/core';\nimport { InAppMessageInteractionEvent, Notifications } from '@aws-amplify/notifications';\nimport { isNil } from '@aws-amplify/ui';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.mjs';\nimport useInAppMessaging from '../useInAppMessaging/useInAppMessaging.mjs';\nimport { getContentProps, getPositionProp } from './utils.mjs';\nconst EMPTY_PROPS = Object.freeze({});\nconst logger = new ConsoleLogger('Notifications.InAppMessaging');\nconst {\n  InAppMessaging\n} = Notifications;\n/**\n * Utility hook for parsing a message and retrieving its corresponding UI component and props\n *\n * @param {UseMessageParams} props - platform specific UI components, action handler, and styles\n * @returns {UseMessage} message UI component and props\n */\nfunction useMessage(_ref) {\n  let {\n    components,\n    onMessageAction\n  } = _ref;\n  const {\n    clearMessage,\n    message\n  } = useInAppMessaging();\n  const {\n    BannerMessage,\n    CarouselMessage,\n    FullScreenMessage,\n    ModalMessage\n  } = components;\n  if (isNil(message)) {\n    return {\n      Component: RenderNothing,\n      props: EMPTY_PROPS\n    };\n  }\n  const {\n    content,\n    layout\n  } = message;\n  const onActionCallback = () => {\n    InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_ACTION_TAKEN);\n    clearMessage();\n  };\n  const onClose = () => {\n    InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_DISMISSED);\n    clearMessage();\n  };\n  const onDisplay = () => {\n    InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_DISPLAYED);\n  };\n  switch (layout) {\n    case 'BOTTOM_BANNER':\n    case 'MIDDLE_BANNER':\n    case 'TOP_BANNER':\n      {\n        const props = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), {\n          layout,\n          onClose,\n          onDisplay,\n          position: getPositionProp(layout)\n        });\n        return {\n          Component: BannerMessage,\n          props\n        };\n      }\n    case 'CAROUSEL':\n      {\n        const props = {\n          data: content === null || content === void 0 ? void 0 : content.map(item => getContentProps(item, onMessageAction, onActionCallback)),\n          layout,\n          onClose,\n          onDisplay\n        };\n        return {\n          Component: CarouselMessage,\n          props\n        };\n      }\n    case 'FULL_SCREEN':\n      {\n        const props = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), {\n          layout,\n          onClose,\n          onDisplay\n        });\n        return {\n          Component: FullScreenMessage,\n          props\n        };\n      }\n    case 'MODAL':\n      {\n        const props = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), {\n          layout,\n          onClose,\n          onDisplay\n        });\n        return {\n          Component: ModalMessage,\n          props\n        };\n      }\n    default:\n      {\n        logger.info(`Received unknown InAppMessage layout: ${layout}`);\n        return {\n          Component: RenderNothing,\n          props: EMPTY_PROPS\n        };\n      }\n  }\n}\nexport { EMPTY_PROPS, useMessage as default };","map":{"version":3,"names":["ConsoleLogger","InAppMessageInteractionEvent","Notifications","isNil","RenderNothing","useInAppMessaging","getContentProps","getPositionProp","EMPTY_PROPS","Object","freeze","logger","InAppMessaging","useMessage","_ref","components","onMessageAction","clearMessage","message","BannerMessage","CarouselMessage","FullScreenMessage","ModalMessage","Component","props","content","layout","onActionCallback","notifyMessageInteraction","MESSAGE_ACTION_TAKEN","onClose","MESSAGE_DISMISSED","onDisplay","MESSAGE_DISPLAYED","assign","position","data","map","item","info","default"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-amplify/ui-react-core/dist/esm/InAppMessaging/hooks/useMessage/useMessage.mjs"],"sourcesContent":["import { ConsoleLogger } from '@aws-amplify/core';\nimport { InAppMessageInteractionEvent, Notifications } from '@aws-amplify/notifications';\nimport { isNil } from '@aws-amplify/ui';\nimport RenderNothing from '../../../components/RenderNothing/RenderNothing.mjs';\nimport useInAppMessaging from '../useInAppMessaging/useInAppMessaging.mjs';\nimport { getContentProps, getPositionProp } from './utils.mjs';\n\nconst EMPTY_PROPS = Object.freeze({});\nconst logger = new ConsoleLogger('Notifications.InAppMessaging');\nconst { InAppMessaging } = Notifications;\n/**\n * Utility hook for parsing a message and retrieving its corresponding UI component and props\n *\n * @param {UseMessageParams} props - platform specific UI components, action handler, and styles\n * @returns {UseMessage} message UI component and props\n */\nfunction useMessage({ components, onMessageAction, }) {\n    const { clearMessage, message } = useInAppMessaging();\n    const { BannerMessage, CarouselMessage, FullScreenMessage, ModalMessage } = components;\n    if (isNil(message)) {\n        return {\n            Component: RenderNothing,\n            props: EMPTY_PROPS,\n        };\n    }\n    const { content, layout } = message;\n    const onActionCallback = () => {\n        InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_ACTION_TAKEN);\n        clearMessage();\n    };\n    const onClose = () => {\n        InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_DISMISSED);\n        clearMessage();\n    };\n    const onDisplay = () => {\n        InAppMessaging.notifyMessageInteraction(message, InAppMessageInteractionEvent.MESSAGE_DISPLAYED);\n    };\n    switch (layout) {\n        case 'BOTTOM_BANNER':\n        case 'MIDDLE_BANNER':\n        case 'TOP_BANNER': {\n            const props = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), { layout,\n                onClose,\n                onDisplay, position: getPositionProp(layout) });\n            return { Component: BannerMessage, props };\n        }\n        case 'CAROUSEL': {\n            const props = {\n                data: content === null || content === void 0 ? void 0 : content.map((item) => getContentProps(item, onMessageAction, onActionCallback)),\n                layout,\n                onClose,\n                onDisplay,\n            };\n            return { Component: CarouselMessage, props };\n        }\n        case 'FULL_SCREEN': {\n            const props = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), { layout,\n                onClose,\n                onDisplay });\n            return { Component: FullScreenMessage, props };\n        }\n        case 'MODAL': {\n            const props = Object.assign(Object.assign({}, getContentProps(content === null || content === void 0 ? void 0 : content[0], onMessageAction, onActionCallback)), { layout,\n                onClose,\n                onDisplay });\n            return { Component: ModalMessage, props };\n        }\n        default: {\n            logger.info(`Received unknown InAppMessage layout: ${layout}`);\n            return {\n                Component: RenderNothing,\n                props: EMPTY_PROPS,\n            };\n        }\n    }\n}\n\nexport { EMPTY_PROPS, useMessage as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}