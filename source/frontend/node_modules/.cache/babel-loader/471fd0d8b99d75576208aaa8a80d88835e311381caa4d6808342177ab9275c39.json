{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nexport var deserializerMiddleware = function (options, deserializer) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var response, parsed;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, next(args)];\n            case 1:\n              response = _a.sent().response;\n              return [4 /*yield*/, deserializer(response, options)];\n            case 2:\n              parsed = _a.sent();\n              return [2 /*return*/, {\n                response: response,\n                output: parsed\n              }];\n          }\n        });\n      });\n    };\n  };\n};","map":{"version":3,"mappings":";AASA,OAAO,IAAMA,sBAAsB,GAAG,UACpCC,OAAqB,EACrBC,YAA0D;EACjB,iBACzCC,IAAuC,EACvCC,OAAgC;IACM,iBACtCC,IAAwC;MAAA;;;;;cAEnB,qBAAMF,IAAI,CAACE,IAAI,CAAC;;cAA7BC,QAAQ,GAAKC,SAAgB,SAArB;cACD,qBAAML,YAAY,CAACI,QAAQ,EAAEL,OAAO,CAAC;;cAA9CO,MAAM,GAAGD,SAAqC;cACpD,sBAAO;gBACLD,QAAQ;gBACRG,MAAM,EAAED;eACT;;;;KACF;EATuC,CASvC;AAZ0C,CAY1C","names":["deserializerMiddleware","options","deserializer","next","context","args","response","_a","parsed","output"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-sdk/middleware-serde/src/deserializerMiddleware.ts"],"sourcesContent":["import {\n  DeserializeHandler,\n  DeserializeHandlerArguments,\n  DeserializeHandlerOutput,\n  DeserializeMiddleware,\n  HandlerExecutionContext,\n  ResponseDeserializer,\n} from \"@aws-sdk/types\";\n\nexport const deserializerMiddleware = <Input extends object, Output extends object, RuntimeUtils = any>(\n  options: RuntimeUtils,\n  deserializer: ResponseDeserializer<any, any, RuntimeUtils>\n): DeserializeMiddleware<Input, Output> => (\n  next: DeserializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): DeserializeHandler<Input, Output> => async (\n  args: DeserializeHandlerArguments<Input>\n): Promise<DeserializeHandlerOutput<Output>> => {\n  const { response } = await next(args);\n  const parsed = await deserializer(response, options);\n  return {\n    response,\n    output: parsed as Output,\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}