{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\nexport var serializeAws_json1_1CreateParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.CreateParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateParallelDataRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteParallelDataRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteTerminologyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteTerminology\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteTerminologyRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeTextTranslationJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.DescribeTextTranslationJob\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeTextTranslationJobRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.GetParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetParallelDataRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetTerminologyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.GetTerminology\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetTerminologyRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ImportTerminologyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ImportTerminology\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ImportTerminologyRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ListParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListParallelDataRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTerminologiesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTerminologies\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTerminologiesRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTextTranslationJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTextTranslationJobs\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTextTranslationJobsRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartTextTranslationJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.StartTextTranslationJob\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartTextTranslationJobRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StopTextTranslationJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.StopTextTranslationJob\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StopTextTranslationJobRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1TranslateTextCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.TranslateText\"\n      };\n      body = JSON.stringify(serializeAws_json1_1TranslateTextRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1UpdateParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.UpdateParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1UpdateParallelDataRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var deserializeAws_json1_1CreateParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1CreateParallelDataCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1CreateParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1CreateParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    var _j;\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _j = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ConflictException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#ConflictException\":\n              return [3 /*break*/, 2];\n            case \"InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 6];\n            case \"InvalidRequestException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3 /*break*/, 8];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.translate#LimitExceededException\":\n              return [3 /*break*/, 10];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 12];\n          }\n          return [3 /*break*/, 14];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DeleteParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DeleteParallelDataCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DeleteParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DeleteParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ConcurrentModificationException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#ConcurrentModificationException\":\n              return [3 /*break*/, 2];\n            case \"InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DeleteTerminologyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DeleteTerminologyCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DeleteTerminologyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeTextTranslationJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeTextTranslationJobCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeTextTranslationJobResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeTextTranslationJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1GetParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1GetParallelDataCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1GetParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1GetTerminologyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1GetTerminologyCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetTerminologyResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1GetTerminologyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ImportTerminologyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ImportTerminologyCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ImportTerminologyResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ImportTerminologyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListParallelDataCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListTerminologiesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListTerminologiesCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTerminologiesResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListTerminologiesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListTextTranslationJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListTextTranslationJobsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTextTranslationJobsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListTextTranslationJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidFilterException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidFilterException\":\n              return [3 /*break*/, 4];\n            case \"InvalidRequestException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidFilterExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1StartTextTranslationJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1StartTextTranslationJobCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1StartTextTranslationJobResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1StartTextTranslationJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidRequestException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"UnsupportedLanguagePairException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1StopTextTranslationJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1StopTextTranslationJobCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1StopTextTranslationJobResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1StopTextTranslationJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1TranslateTextCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1TranslateTextCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1TranslateTextResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1TranslateTextCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n    var _l;\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"DetectedLanguageLowConfidenceException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#DetectedLanguageLowConfidenceException\":\n              return [3 /*break*/, 2];\n            case \"InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"InvalidRequestException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"ServiceUnavailableException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.translate#ServiceUnavailableException\":\n              return [3 /*break*/, 10];\n            case \"TextSizeLimitExceededException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.translate#TextSizeLimitExceededException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"UnsupportedLanguagePairException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n              return [3 /*break*/, 16];\n          }\n          return [3 /*break*/, 18];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TextSizeLimitExceededExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1UpdateParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1UpdateParallelDataCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1UpdateParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1UpdateParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n    var _l;\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ConcurrentModificationException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#ConcurrentModificationException\":\n              return [3 /*break*/, 2];\n            case \"ConflictException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#ConflictException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 6];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 8];\n            case \"InvalidRequestException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3 /*break*/, 10];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.translate#LimitExceededException\":\n              return [3 /*break*/, 12];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 14];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 16];\n          }\n          return [3 /*break*/, 18];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ConcurrentModificationExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);\n      contents = __assign({\n        name: \"ConcurrentModificationException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ConflictExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ConflictException(body, context);\n      contents = __assign({\n        name: \"ConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1DetectedLanguageLowConfidenceException(body, context);\n      contents = __assign({\n        name: \"DetectedLanguageLowConfidenceException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InternalServerExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InternalServerException(body, context);\n      contents = __assign({\n        name: \"InternalServerException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InvalidFilterExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidFilterException(body, context);\n      contents = __assign({\n        name: \"InvalidFilterException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InvalidParameterValueExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidParameterValueException(body, context);\n      contents = __assign({\n        name: \"InvalidParameterValueException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InvalidRequestExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidRequestException(body, context);\n      contents = __assign({\n        name: \"InvalidRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n      contents = __assign({\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ServiceUnavailableExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ServiceUnavailableException(body, context);\n      contents = __assign({\n        name: \"ServiceUnavailableException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1TextSizeLimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1TextSizeLimitExceededException(body, context);\n      contents = __assign({\n        name: \"TextSizeLimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1TooManyRequestsExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);\n      contents = __assign({\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1UnsupportedLanguagePairException(body, context);\n      contents = __assign({\n        name: \"UnsupportedLanguagePairException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar serializeAws_json1_1CreateParallelDataRequest = function (input, context) {\n  var _a;\n  return __assign(__assign(__assign(__assign({\n    ClientToken: (_a = input.ClientToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken()\n  }, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EncryptionKey !== undefined && input.EncryptionKey !== null && {\n    EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context)\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.ParallelDataConfig !== undefined && input.ParallelDataConfig !== null && {\n    ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context)\n  });\n};\nvar serializeAws_json1_1DeleteParallelDataRequest = function (input, context) {\n  return __assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  });\n};\nvar serializeAws_json1_1DeleteTerminologyRequest = function (input, context) {\n  return __assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  });\n};\nvar serializeAws_json1_1DescribeTextTranslationJobRequest = function (input, context) {\n  return __assign({}, input.JobId !== undefined && input.JobId !== null && {\n    JobId: input.JobId\n  });\n};\nvar serializeAws_json1_1EncryptionKey = function (input, context) {\n  return __assign(__assign({}, input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\nvar serializeAws_json1_1GetParallelDataRequest = function (input, context) {\n  return __assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  });\n};\nvar serializeAws_json1_1GetTerminologyRequest = function (input, context) {\n  return __assign(__assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.TerminologyDataFormat !== undefined && input.TerminologyDataFormat !== null && {\n    TerminologyDataFormat: input.TerminologyDataFormat\n  });\n};\nvar serializeAws_json1_1ImportTerminologyRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EncryptionKey !== undefined && input.EncryptionKey !== null && {\n    EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context)\n  }), input.MergeStrategy !== undefined && input.MergeStrategy !== null && {\n    MergeStrategy: input.MergeStrategy\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.TerminologyData !== undefined && input.TerminologyData !== null && {\n    TerminologyData: serializeAws_json1_1TerminologyData(input.TerminologyData, context)\n  });\n};\nvar serializeAws_json1_1InputDataConfig = function (input, context) {\n  return __assign(__assign({}, input.ContentType !== undefined && input.ContentType !== null && {\n    ContentType: input.ContentType\n  }), input.S3Uri !== undefined && input.S3Uri !== null && {\n    S3Uri: input.S3Uri\n  });\n};\nvar serializeAws_json1_1ListParallelDataRequest = function (input, context) {\n  return __assign(__assign({}, input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\nvar serializeAws_json1_1ListTerminologiesRequest = function (input, context) {\n  return __assign(__assign({}, input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\nvar serializeAws_json1_1ListTextTranslationJobsRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.Filter !== undefined && input.Filter !== null && {\n    Filter: serializeAws_json1_1TextTranslationJobFilter(input.Filter, context)\n  }), input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\nvar serializeAws_json1_1OutputDataConfig = function (input, context) {\n  return __assign({}, input.S3Uri !== undefined && input.S3Uri !== null && {\n    S3Uri: input.S3Uri\n  });\n};\nvar serializeAws_json1_1ParallelDataConfig = function (input, context) {\n  return __assign(__assign({}, input.Format !== undefined && input.Format !== null && {\n    Format: input.Format\n  }), input.S3Uri !== undefined && input.S3Uri !== null && {\n    S3Uri: input.S3Uri\n  });\n};\nvar serializeAws_json1_1ResourceNameList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_json1_1StartTextTranslationJobRequest = function (input, context) {\n  var _a;\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n    ClientToken: (_a = input.ClientToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken()\n  }, input.DataAccessRoleArn !== undefined && input.DataAccessRoleArn !== null && {\n    DataAccessRoleArn: input.DataAccessRoleArn\n  }), input.InputDataConfig !== undefined && input.InputDataConfig !== null && {\n    InputDataConfig: serializeAws_json1_1InputDataConfig(input.InputDataConfig, context)\n  }), input.JobName !== undefined && input.JobName !== null && {\n    JobName: input.JobName\n  }), input.OutputDataConfig !== undefined && input.OutputDataConfig !== null && {\n    OutputDataConfig: serializeAws_json1_1OutputDataConfig(input.OutputDataConfig, context)\n  }), input.ParallelDataNames !== undefined && input.ParallelDataNames !== null && {\n    ParallelDataNames: serializeAws_json1_1ResourceNameList(input.ParallelDataNames, context)\n  }), input.SourceLanguageCode !== undefined && input.SourceLanguageCode !== null && {\n    SourceLanguageCode: input.SourceLanguageCode\n  }), input.TargetLanguageCodes !== undefined && input.TargetLanguageCodes !== null && {\n    TargetLanguageCodes: serializeAws_json1_1TargetLanguageCodeStringList(input.TargetLanguageCodes, context)\n  }), input.TerminologyNames !== undefined && input.TerminologyNames !== null && {\n    TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context)\n  });\n};\nvar serializeAws_json1_1StopTextTranslationJobRequest = function (input, context) {\n  return __assign({}, input.JobId !== undefined && input.JobId !== null && {\n    JobId: input.JobId\n  });\n};\nvar serializeAws_json1_1TargetLanguageCodeStringList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_json1_1TerminologyData = function (input, context) {\n  return __assign(__assign({}, input.File !== undefined && input.File !== null && {\n    File: context.base64Encoder(input.File)\n  }), input.Format !== undefined && input.Format !== null && {\n    Format: input.Format\n  });\n};\nvar serializeAws_json1_1TextTranslationJobFilter = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.JobName !== undefined && input.JobName !== null && {\n    JobName: input.JobName\n  }), input.JobStatus !== undefined && input.JobStatus !== null && {\n    JobStatus: input.JobStatus\n  }), input.SubmittedAfterTime !== undefined && input.SubmittedAfterTime !== null && {\n    SubmittedAfterTime: Math.round(input.SubmittedAfterTime.getTime() / 1000)\n  }), input.SubmittedBeforeTime !== undefined && input.SubmittedBeforeTime !== null && {\n    SubmittedBeforeTime: Math.round(input.SubmittedBeforeTime.getTime() / 1000)\n  });\n};\nvar serializeAws_json1_1TranslateTextRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.SourceLanguageCode !== undefined && input.SourceLanguageCode !== null && {\n    SourceLanguageCode: input.SourceLanguageCode\n  }), input.TargetLanguageCode !== undefined && input.TargetLanguageCode !== null && {\n    TargetLanguageCode: input.TargetLanguageCode\n  }), input.TerminologyNames !== undefined && input.TerminologyNames !== null && {\n    TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context)\n  }), input.Text !== undefined && input.Text !== null && {\n    Text: input.Text\n  });\n};\nvar serializeAws_json1_1UpdateParallelDataRequest = function (input, context) {\n  var _a;\n  return __assign(__assign(__assign({\n    ClientToken: (_a = input.ClientToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken()\n  }, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.ParallelDataConfig !== undefined && input.ParallelDataConfig !== null && {\n    ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context)\n  });\n};\nvar deserializeAws_json1_1AppliedTerminology = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Terms: output.Terms !== undefined && output.Terms !== null ? deserializeAws_json1_1TermList(output.Terms, context) : undefined\n  };\n};\nvar deserializeAws_json1_1AppliedTerminologyList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1AppliedTerminology(entry, context);\n  });\n};\nvar deserializeAws_json1_1ConcurrentModificationException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1ConflictException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1CreateParallelDataResponse = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined\n  };\n};\nvar deserializeAws_json1_1DeleteParallelDataResponse = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeTextTranslationJobResponse = function (output, context) {\n  return {\n    TextTranslationJobProperties: output.TextTranslationJobProperties !== undefined && output.TextTranslationJobProperties !== null ? deserializeAws_json1_1TextTranslationJobProperties(output.TextTranslationJobProperties, context) : undefined\n  };\n};\nvar deserializeAws_json1_1DetectedLanguageLowConfidenceException = function (output, context) {\n  return {\n    DetectedLanguageCode: output.DetectedLanguageCode !== undefined && output.DetectedLanguageCode !== null ? output.DetectedLanguageCode : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1EncryptionKey = function (output, context) {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\nvar deserializeAws_json1_1GetParallelDataResponse = function (output, context) {\n  return {\n    AuxiliaryDataLocation: output.AuxiliaryDataLocation !== undefined && output.AuxiliaryDataLocation !== null ? deserializeAws_json1_1ParallelDataDataLocation(output.AuxiliaryDataLocation, context) : undefined,\n    DataLocation: output.DataLocation !== undefined && output.DataLocation !== null ? deserializeAws_json1_1ParallelDataDataLocation(output.DataLocation, context) : undefined,\n    LatestUpdateAttemptAuxiliaryDataLocation: output.LatestUpdateAttemptAuxiliaryDataLocation !== undefined && output.LatestUpdateAttemptAuxiliaryDataLocation !== null ? deserializeAws_json1_1ParallelDataDataLocation(output.LatestUpdateAttemptAuxiliaryDataLocation, context) : undefined,\n    ParallelDataProperties: output.ParallelDataProperties !== undefined && output.ParallelDataProperties !== null ? deserializeAws_json1_1ParallelDataProperties(output.ParallelDataProperties, context) : undefined\n  };\n};\nvar deserializeAws_json1_1GetTerminologyResponse = function (output, context) {\n  return {\n    TerminologyDataLocation: output.TerminologyDataLocation !== undefined && output.TerminologyDataLocation !== null ? deserializeAws_json1_1TerminologyDataLocation(output.TerminologyDataLocation, context) : undefined,\n    TerminologyProperties: output.TerminologyProperties !== undefined && output.TerminologyProperties !== null ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ImportTerminologyResponse = function (output, context) {\n  return {\n    TerminologyProperties: output.TerminologyProperties !== undefined && output.TerminologyProperties !== null ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context) : undefined\n  };\n};\nvar deserializeAws_json1_1InputDataConfig = function (output, context) {\n  return {\n    ContentType: output.ContentType !== undefined && output.ContentType !== null ? output.ContentType : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined\n  };\n};\nvar deserializeAws_json1_1InternalServerException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1InvalidFilterException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1InvalidParameterValueException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1InvalidRequestException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1JobDetails = function (output, context) {\n  return {\n    DocumentsWithErrorsCount: output.DocumentsWithErrorsCount !== undefined && output.DocumentsWithErrorsCount !== null ? output.DocumentsWithErrorsCount : undefined,\n    InputDocumentsCount: output.InputDocumentsCount !== undefined && output.InputDocumentsCount !== null ? output.InputDocumentsCount : undefined,\n    TranslatedDocumentsCount: output.TranslatedDocumentsCount !== undefined && output.TranslatedDocumentsCount !== null ? output.TranslatedDocumentsCount : undefined\n  };\n};\nvar deserializeAws_json1_1LanguageCodeStringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1ListParallelDataResponse = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    ParallelDataPropertiesList: output.ParallelDataPropertiesList !== undefined && output.ParallelDataPropertiesList !== null ? deserializeAws_json1_1ParallelDataPropertiesList(output.ParallelDataPropertiesList, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ListTerminologiesResponse = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TerminologyPropertiesList: output.TerminologyPropertiesList !== undefined && output.TerminologyPropertiesList !== null ? deserializeAws_json1_1TerminologyPropertiesList(output.TerminologyPropertiesList, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ListTextTranslationJobsResponse = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TextTranslationJobPropertiesList: output.TextTranslationJobPropertiesList !== undefined && output.TextTranslationJobPropertiesList !== null ? deserializeAws_json1_1TextTranslationJobPropertiesList(output.TextTranslationJobPropertiesList, context) : undefined\n  };\n};\nvar deserializeAws_json1_1OutputDataConfig = function (output, context) {\n  return {\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined\n  };\n};\nvar deserializeAws_json1_1ParallelDataConfig = function (output, context) {\n  return {\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined\n  };\n};\nvar deserializeAws_json1_1ParallelDataDataLocation = function (output, context) {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType: output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined\n  };\n};\nvar deserializeAws_json1_1ParallelDataProperties = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt: output.CreatedAt !== undefined && output.CreatedAt !== null ? new Date(Math.round(output.CreatedAt * 1000)) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey: output.EncryptionKey !== undefined && output.EncryptionKey !== null ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context) : undefined,\n    FailedRecordCount: output.FailedRecordCount !== undefined && output.FailedRecordCount !== null ? output.FailedRecordCount : undefined,\n    ImportedDataSize: output.ImportedDataSize !== undefined && output.ImportedDataSize !== null ? output.ImportedDataSize : undefined,\n    ImportedRecordCount: output.ImportedRecordCount !== undefined && output.ImportedRecordCount !== null ? output.ImportedRecordCount : undefined,\n    LastUpdatedAt: output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null ? new Date(Math.round(output.LastUpdatedAt * 1000)) : undefined,\n    LatestUpdateAttemptAt: output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000)) : undefined,\n    LatestUpdateAttemptStatus: output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null ? output.LatestUpdateAttemptStatus : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    ParallelDataConfig: output.ParallelDataConfig !== undefined && output.ParallelDataConfig !== null ? deserializeAws_json1_1ParallelDataConfig(output.ParallelDataConfig, context) : undefined,\n    SkippedRecordCount: output.SkippedRecordCount !== undefined && output.SkippedRecordCount !== null ? output.SkippedRecordCount : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n    TargetLanguageCodes: output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ParallelDataPropertiesList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1ParallelDataProperties(entry, context);\n  });\n};\nvar deserializeAws_json1_1ResourceNameList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1ServiceUnavailableException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1StartTextTranslationJobResponse = function (output, context) {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined\n  };\n};\nvar deserializeAws_json1_1StopTextTranslationJobResponse = function (output, context) {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined\n  };\n};\nvar deserializeAws_json1_1TargetLanguageCodeStringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1Term = function (output, context) {\n  return {\n    SourceText: output.SourceText !== undefined && output.SourceText !== null ? output.SourceText : undefined,\n    TargetText: output.TargetText !== undefined && output.TargetText !== null ? output.TargetText : undefined\n  };\n};\nvar deserializeAws_json1_1TerminologyDataLocation = function (output, context) {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType: output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined\n  };\n};\nvar deserializeAws_json1_1TerminologyProperties = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt: output.CreatedAt !== undefined && output.CreatedAt !== null ? new Date(Math.round(output.CreatedAt * 1000)) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey: output.EncryptionKey !== undefined && output.EncryptionKey !== null ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context) : undefined,\n    LastUpdatedAt: output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null ? new Date(Math.round(output.LastUpdatedAt * 1000)) : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SizeBytes: output.SizeBytes !== undefined && output.SizeBytes !== null ? output.SizeBytes : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    TargetLanguageCodes: output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context) : undefined,\n    TermCount: output.TermCount !== undefined && output.TermCount !== null ? output.TermCount : undefined\n  };\n};\nvar deserializeAws_json1_1TerminologyPropertiesList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1TerminologyProperties(entry, context);\n  });\n};\nvar deserializeAws_json1_1TermList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1Term(entry, context);\n  });\n};\nvar deserializeAws_json1_1TextSizeLimitExceededException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1TextTranslationJobProperties = function (output, context) {\n  return {\n    DataAccessRoleArn: output.DataAccessRoleArn !== undefined && output.DataAccessRoleArn !== null ? output.DataAccessRoleArn : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(Math.round(output.EndTime * 1000)) : undefined,\n    InputDataConfig: output.InputDataConfig !== undefined && output.InputDataConfig !== null ? deserializeAws_json1_1InputDataConfig(output.InputDataConfig, context) : undefined,\n    JobDetails: output.JobDetails !== undefined && output.JobDetails !== null ? deserializeAws_json1_1JobDetails(output.JobDetails, context) : undefined,\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobName: output.JobName !== undefined && output.JobName !== null ? output.JobName : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    OutputDataConfig: output.OutputDataConfig !== undefined && output.OutputDataConfig !== null ? deserializeAws_json1_1OutputDataConfig(output.OutputDataConfig, context) : undefined,\n    ParallelDataNames: output.ParallelDataNames !== undefined && output.ParallelDataNames !== null ? deserializeAws_json1_1ResourceNameList(output.ParallelDataNames, context) : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    SubmittedTime: output.SubmittedTime !== undefined && output.SubmittedTime !== null ? new Date(Math.round(output.SubmittedTime * 1000)) : undefined,\n    TargetLanguageCodes: output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null ? deserializeAws_json1_1TargetLanguageCodeStringList(output.TargetLanguageCodes, context) : undefined,\n    TerminologyNames: output.TerminologyNames !== undefined && output.TerminologyNames !== null ? deserializeAws_json1_1ResourceNameList(output.TerminologyNames, context) : undefined\n  };\n};\nvar deserializeAws_json1_1TextTranslationJobPropertiesList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1TextTranslationJobProperties(entry, context);\n  });\n};\nvar deserializeAws_json1_1TooManyRequestsException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1TranslateTextResponse = function (output, context) {\n  return {\n    AppliedTerminologies: output.AppliedTerminologies !== undefined && output.AppliedTerminologies !== null ? deserializeAws_json1_1AppliedTerminologyList(output.AppliedTerminologies, context) : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    TargetLanguageCode: output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null ? output.TargetLanguageCode : undefined,\n    TranslatedText: output.TranslatedText !== undefined && output.TranslatedText !== null ? output.TranslatedText : undefined\n  };\n};\nvar deserializeAws_json1_1UnsupportedLanguagePairException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    TargetLanguageCode: output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null ? output.TargetLanguageCode : undefined\n  };\n};\nvar deserializeAws_json1_1UpdateParallelDataResponse = function (output, context) {\n  return {\n    LatestUpdateAttemptAt: output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000)) : undefined,\n    LatestUpdateAttemptStatus: output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null ? output.LatestUpdateAttemptStatus : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined\n  };\n};\nvar deserializeMetadata = function (output) {\n  var _a;\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          contents = {\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            path: path,\n            headers: headers\n          };\n          if (resolvedHostname !== undefined) {\n            contents.hostname = resolvedHostname;\n          }\n          if (body !== undefined) {\n            contents.body = body;\n          }\n          return [2 /*return*/, new __HttpRequest(contents)];\n      }\n    });\n  });\n};\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["HttpRequest","__HttpRequest","v4","generateIdempotencyToken","serializeAws_json1_1CreateParallelDataCommand","input","context","headers","body","JSON","stringify","serializeAws_json1_1CreateParallelDataRequest","buildHttpRpcRequest","undefined","serializeAws_json1_1DeleteParallelDataCommand","serializeAws_json1_1DeleteParallelDataRequest","serializeAws_json1_1DeleteTerminologyCommand","serializeAws_json1_1DeleteTerminologyRequest","serializeAws_json1_1DescribeTextTranslationJobCommand","serializeAws_json1_1DescribeTextTranslationJobRequest","serializeAws_json1_1GetParallelDataCommand","serializeAws_json1_1GetParallelDataRequest","serializeAws_json1_1GetTerminologyCommand","serializeAws_json1_1GetTerminologyRequest","serializeAws_json1_1ImportTerminologyCommand","serializeAws_json1_1ImportTerminologyRequest","serializeAws_json1_1ListParallelDataCommand","serializeAws_json1_1ListParallelDataRequest","serializeAws_json1_1ListTerminologiesCommand","serializeAws_json1_1ListTerminologiesRequest","serializeAws_json1_1ListTextTranslationJobsCommand","serializeAws_json1_1ListTextTranslationJobsRequest","serializeAws_json1_1StartTextTranslationJobCommand","serializeAws_json1_1StartTextTranslationJobRequest","serializeAws_json1_1StopTextTranslationJobCommand","serializeAws_json1_1StopTextTranslationJobRequest","serializeAws_json1_1TranslateTextCommand","serializeAws_json1_1TranslateTextRequest","serializeAws_json1_1UpdateParallelDataCommand","serializeAws_json1_1UpdateParallelDataRequest","deserializeAws_json1_1CreateParallelDataCommand","output","statusCode","deserializeAws_json1_1CreateParallelDataCommandError","parseBody","data","_a","contents","deserializeAws_json1_1CreateParallelDataResponse","response","$metadata","deserializeMetadata","Promise","resolve","parsedOutput","_j","_k","errorCode","loadRestJsonErrorCode","_b","deserializeAws_json1_1ConflictExceptionResponse","name","deserializeAws_json1_1InternalServerExceptionResponse","deserializeAws_json1_1InvalidParameterValueExceptionResponse","deserializeAws_json1_1InvalidRequestExceptionResponse","deserializeAws_json1_1LimitExceededExceptionResponse","deserializeAws_json1_1TooManyRequestsExceptionResponse","parsedBody","code","Code","__assign","message","Message","$fault","reject","Object","assign","Error","deserializeAws_json1_1DeleteParallelDataCommand","deserializeAws_json1_1DeleteParallelDataCommandError","deserializeAws_json1_1DeleteParallelDataResponse","_g","_h","deserializeAws_json1_1ConcurrentModificationExceptionResponse","deserializeAws_json1_1ResourceNotFoundExceptionResponse","deserializeAws_json1_1DeleteTerminologyCommand","deserializeAws_json1_1DeleteTerminologyCommandError","collectBody","deserializeAws_json1_1DescribeTextTranslationJobCommand","deserializeAws_json1_1DescribeTextTranslationJobCommandError","deserializeAws_json1_1DescribeTextTranslationJobResponse","_f","deserializeAws_json1_1GetParallelDataCommand","deserializeAws_json1_1GetParallelDataCommandError","deserializeAws_json1_1GetParallelDataResponse","deserializeAws_json1_1GetTerminologyCommand","deserializeAws_json1_1GetTerminologyCommandError","deserializeAws_json1_1GetTerminologyResponse","deserializeAws_json1_1ImportTerminologyCommand","deserializeAws_json1_1ImportTerminologyCommandError","deserializeAws_json1_1ImportTerminologyResponse","deserializeAws_json1_1ListParallelDataCommand","deserializeAws_json1_1ListParallelDataCommandError","deserializeAws_json1_1ListParallelDataResponse","deserializeAws_json1_1ListTerminologiesCommand","deserializeAws_json1_1ListTerminologiesCommandError","deserializeAws_json1_1ListTerminologiesResponse","deserializeAws_json1_1ListTextTranslationJobsCommand","deserializeAws_json1_1ListTextTranslationJobsCommandError","deserializeAws_json1_1ListTextTranslationJobsResponse","deserializeAws_json1_1InvalidFilterExceptionResponse","deserializeAws_json1_1StartTextTranslationJobCommand","deserializeAws_json1_1StartTextTranslationJobCommandError","deserializeAws_json1_1StartTextTranslationJobResponse","deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse","deserializeAws_json1_1StopTextTranslationJobCommand","deserializeAws_json1_1StopTextTranslationJobCommandError","deserializeAws_json1_1StopTextTranslationJobResponse","deserializeAws_json1_1TranslateTextCommand","deserializeAws_json1_1TranslateTextCommandError","deserializeAws_json1_1TranslateTextResponse","_l","_m","deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse","deserializeAws_json1_1ServiceUnavailableExceptionResponse","deserializeAws_json1_1TextSizeLimitExceededExceptionResponse","deserializeAws_json1_1UpdateParallelDataCommand","deserializeAws_json1_1UpdateParallelDataCommandError","deserializeAws_json1_1UpdateParallelDataResponse","deserialized","deserializeAws_json1_1ConcurrentModificationException","deserializeAws_json1_1ConflictException","deserializeAws_json1_1DetectedLanguageLowConfidenceException","deserializeAws_json1_1InternalServerException","deserializeAws_json1_1InvalidFilterException","deserializeAws_json1_1InvalidParameterValueException","deserializeAws_json1_1InvalidRequestException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1ResourceNotFoundException","deserializeAws_json1_1ServiceUnavailableException","deserializeAws_json1_1TextSizeLimitExceededException","deserializeAws_json1_1TooManyRequestsException","deserializeAws_json1_1UnsupportedLanguagePairException","ClientToken","Description","EncryptionKey","serializeAws_json1_1EncryptionKey","Name","ParallelDataConfig","serializeAws_json1_1ParallelDataConfig","JobId","Id","Type","TerminologyDataFormat","MergeStrategy","TerminologyData","serializeAws_json1_1TerminologyData","serializeAws_json1_1InputDataConfig","ContentType","S3Uri","MaxResults","NextToken","Filter","serializeAws_json1_1TextTranslationJobFilter","serializeAws_json1_1OutputDataConfig","Format","serializeAws_json1_1ResourceNameList","filter","e","map","entry","DataAccessRoleArn","InputDataConfig","JobName","OutputDataConfig","ParallelDataNames","SourceLanguageCode","TargetLanguageCodes","serializeAws_json1_1TargetLanguageCodeStringList","TerminologyNames","File","base64Encoder","JobStatus","SubmittedAfterTime","Math","round","getTime","SubmittedBeforeTime","TargetLanguageCode","Text","deserializeAws_json1_1AppliedTerminology","Terms","deserializeAws_json1_1TermList","deserializeAws_json1_1AppliedTerminologyList","Status","TextTranslationJobProperties","deserializeAws_json1_1TextTranslationJobProperties","DetectedLanguageCode","deserializeAws_json1_1EncryptionKey","AuxiliaryDataLocation","deserializeAws_json1_1ParallelDataDataLocation","DataLocation","LatestUpdateAttemptAuxiliaryDataLocation","ParallelDataProperties","deserializeAws_json1_1ParallelDataProperties","TerminologyDataLocation","deserializeAws_json1_1TerminologyDataLocation","TerminologyProperties","deserializeAws_json1_1TerminologyProperties","deserializeAws_json1_1InputDataConfig","deserializeAws_json1_1JobDetails","DocumentsWithErrorsCount","InputDocumentsCount","TranslatedDocumentsCount","deserializeAws_json1_1LanguageCodeStringList","ParallelDataPropertiesList","deserializeAws_json1_1ParallelDataPropertiesList","TerminologyPropertiesList","deserializeAws_json1_1TerminologyPropertiesList","TextTranslationJobPropertiesList","deserializeAws_json1_1TextTranslationJobPropertiesList","deserializeAws_json1_1OutputDataConfig","deserializeAws_json1_1ParallelDataConfig","Location","RepositoryType","Arn","CreatedAt","Date","FailedRecordCount","ImportedDataSize","ImportedRecordCount","LastUpdatedAt","LatestUpdateAttemptAt","LatestUpdateAttemptStatus","SkippedRecordCount","deserializeAws_json1_1ResourceNameList","deserializeAws_json1_1TargetLanguageCodeStringList","deserializeAws_json1_1Term","SourceText","TargetText","SizeBytes","TermCount","EndTime","JobDetails","SubmittedTime","AppliedTerminologies","TranslatedText","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","endpoint","_c","hostname","protocol","port","method","encoded","length","parse","findKey","object","key","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-sdk/client-translate/protocols/Aws_json1_1.ts"],"sourcesContent":["import { CreateParallelDataCommandInput, CreateParallelDataCommandOutput } from \"../commands/CreateParallelDataCommand\";\nimport { DeleteParallelDataCommandInput, DeleteParallelDataCommandOutput } from \"../commands/DeleteParallelDataCommand\";\nimport { DeleteTerminologyCommandInput, DeleteTerminologyCommandOutput } from \"../commands/DeleteTerminologyCommand\";\nimport {\n  DescribeTextTranslationJobCommandInput,\n  DescribeTextTranslationJobCommandOutput,\n} from \"../commands/DescribeTextTranslationJobCommand\";\nimport { GetParallelDataCommandInput, GetParallelDataCommandOutput } from \"../commands/GetParallelDataCommand\";\nimport { GetTerminologyCommandInput, GetTerminologyCommandOutput } from \"../commands/GetTerminologyCommand\";\nimport { ImportTerminologyCommandInput, ImportTerminologyCommandOutput } from \"../commands/ImportTerminologyCommand\";\nimport { ListParallelDataCommandInput, ListParallelDataCommandOutput } from \"../commands/ListParallelDataCommand\";\nimport { ListTerminologiesCommandInput, ListTerminologiesCommandOutput } from \"../commands/ListTerminologiesCommand\";\nimport {\n  ListTextTranslationJobsCommandInput,\n  ListTextTranslationJobsCommandOutput,\n} from \"../commands/ListTextTranslationJobsCommand\";\nimport {\n  StartTextTranslationJobCommandInput,\n  StartTextTranslationJobCommandOutput,\n} from \"../commands/StartTextTranslationJobCommand\";\nimport {\n  StopTextTranslationJobCommandInput,\n  StopTextTranslationJobCommandOutput,\n} from \"../commands/StopTextTranslationJobCommand\";\nimport { TranslateTextCommandInput, TranslateTextCommandOutput } from \"../commands/TranslateTextCommand\";\nimport { UpdateParallelDataCommandInput, UpdateParallelDataCommandOutput } from \"../commands/UpdateParallelDataCommand\";\nimport {\n  AppliedTerminology,\n  ConcurrentModificationException,\n  ConflictException,\n  CreateParallelDataRequest,\n  CreateParallelDataResponse,\n  DeleteParallelDataRequest,\n  DeleteParallelDataResponse,\n  DeleteTerminologyRequest,\n  DescribeTextTranslationJobRequest,\n  DescribeTextTranslationJobResponse,\n  DetectedLanguageLowConfidenceException,\n  EncryptionKey,\n  GetParallelDataRequest,\n  GetParallelDataResponse,\n  GetTerminologyRequest,\n  GetTerminologyResponse,\n  ImportTerminologyRequest,\n  ImportTerminologyResponse,\n  InputDataConfig,\n  InternalServerException,\n  InvalidFilterException,\n  InvalidParameterValueException,\n  InvalidRequestException,\n  JobDetails,\n  LimitExceededException,\n  ListParallelDataRequest,\n  ListParallelDataResponse,\n  ListTerminologiesRequest,\n  ListTerminologiesResponse,\n  ListTextTranslationJobsRequest,\n  ListTextTranslationJobsResponse,\n  OutputDataConfig,\n  ParallelDataConfig,\n  ParallelDataDataLocation,\n  ParallelDataProperties,\n  ResourceNotFoundException,\n  ServiceUnavailableException,\n  StartTextTranslationJobRequest,\n  StartTextTranslationJobResponse,\n  StopTextTranslationJobRequest,\n  StopTextTranslationJobResponse,\n  Term,\n  TerminologyData,\n  TerminologyDataLocation,\n  TerminologyProperties,\n  TextSizeLimitExceededException,\n  TextTranslationJobFilter,\n  TextTranslationJobProperties,\n  TooManyRequestsException,\n  TranslateTextRequest,\n  TranslateTextResponse,\n  UnsupportedLanguagePairException,\n  UpdateParallelDataRequest,\n  UpdateParallelDataResponse,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\n\nexport const serializeAws_json1_1CreateParallelDataCommand = async (\n  input: CreateParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.CreateParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteParallelDataCommand = async (\n  input: DeleteParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteTerminologyCommand = async (\n  input: DeleteTerminologyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteTerminology\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteTerminologyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeTextTranslationJobCommand = async (\n  input: DescribeTextTranslationJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.DescribeTextTranslationJob\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeTextTranslationJobRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetParallelDataCommand = async (\n  input: GetParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.GetParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetTerminologyCommand = async (\n  input: GetTerminologyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.GetTerminology\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetTerminologyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ImportTerminologyCommand = async (\n  input: ImportTerminologyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ImportTerminology\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ImportTerminologyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListParallelDataCommand = async (\n  input: ListParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ListParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTerminologiesCommand = async (\n  input: ListTerminologiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTerminologies\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTerminologiesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTextTranslationJobsCommand = async (\n  input: ListTextTranslationJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTextTranslationJobs\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTextTranslationJobsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartTextTranslationJobCommand = async (\n  input: StartTextTranslationJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.StartTextTranslationJob\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartTextTranslationJobRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StopTextTranslationJobCommand = async (\n  input: StopTextTranslationJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.StopTextTranslationJob\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StopTextTranslationJobRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1TranslateTextCommand = async (\n  input: TranslateTextCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.TranslateText\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1TranslateTextRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UpdateParallelDataCommand = async (\n  input: UpdateParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.UpdateParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UpdateParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1CreateParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1CreateParallelDataResponse(data, context);\n  const response: CreateParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConflictException\":\n    case \"com.amazonaws.translate#ConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.translate#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DeleteParallelDataResponse(data, context);\n  const response: DeleteParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.translate#ConcurrentModificationException\":\n      response = {\n        ...(await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteTerminologyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteTerminologyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteTerminologyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteTerminologyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteTerminologyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteTerminologyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeTextTranslationJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeTextTranslationJobCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeTextTranslationJobCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeTextTranslationJobResponse(data, context);\n  const response: DescribeTextTranslationJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeTextTranslationJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeTextTranslationJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetParallelDataResponse(data, context);\n  const response: GetParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetTerminologyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetTerminologyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetTerminologyCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetTerminologyResponse(data, context);\n  const response: GetTerminologyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetTerminologyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetTerminologyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ImportTerminologyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ImportTerminologyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ImportTerminologyCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ImportTerminologyResponse(data, context);\n  const response: ImportTerminologyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ImportTerminologyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ImportTerminologyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.translate#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListParallelDataResponse(data, context);\n  const response: ListParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTerminologiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTerminologiesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTerminologiesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTerminologiesResponse(data, context);\n  const response: ListTerminologiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTerminologiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTerminologiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTextTranslationJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTextTranslationJobsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTextTranslationJobsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTextTranslationJobsResponse(data, context);\n  const response: ListTextTranslationJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTextTranslationJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTextTranslationJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidFilterException\":\n    case \"com.amazonaws.translate#InvalidFilterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidFilterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartTextTranslationJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartTextTranslationJobCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StartTextTranslationJobCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StartTextTranslationJobResponse(data, context);\n  const response: StartTextTranslationJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartTextTranslationJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartTextTranslationJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedLanguagePairException\":\n    case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n      response = {\n        ...(await deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StopTextTranslationJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopTextTranslationJobCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StopTextTranslationJobCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StopTextTranslationJobResponse(data, context);\n  const response: StopTextTranslationJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StopTextTranslationJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopTextTranslationJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1TranslateTextCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TranslateTextCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TranslateTextCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1TranslateTextResponse(data, context);\n  const response: TranslateTextCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1TranslateTextCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TranslateTextCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"DetectedLanguageLowConfidenceException\":\n    case \"com.amazonaws.translate#DetectedLanguageLowConfidenceException\":\n      response = {\n        ...(await deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.translate#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TextSizeLimitExceededException\":\n    case \"com.amazonaws.translate#TextSizeLimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1TextSizeLimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedLanguagePairException\":\n    case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n      response = {\n        ...(await deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UpdateParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1UpdateParallelDataResponse(data, context);\n  const response: UpdateParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UpdateParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.translate#ConcurrentModificationException\":\n      response = {\n        ...(await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.translate#ConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.translate#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1ConcurrentModificationExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConcurrentModificationException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ConcurrentModificationException(body, context);\n  const contents: ConcurrentModificationException = {\n    name: \"ConcurrentModificationException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ConflictExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConflictException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ConflictException(body, context);\n  const contents: ConflictException = {\n    name: \"ConflictException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<DetectedLanguageLowConfidenceException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1DetectedLanguageLowConfidenceException(body, context);\n  const contents: DetectedLanguageLowConfidenceException = {\n    name: \"DetectedLanguageLowConfidenceException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InternalServerExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalServerException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InternalServerException(body, context);\n  const contents: InternalServerException = {\n    name: \"InternalServerException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidFilterExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidFilterException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidFilterException(body, context);\n  const contents: InvalidFilterException = {\n    name: \"InvalidFilterException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidParameterValueExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidParameterValueException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidParameterValueException(body, context);\n  const contents: InvalidParameterValueException = {\n    name: \"InvalidParameterValueException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidRequestExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidRequestException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidRequestException(body, context);\n  const contents: InvalidRequestException = {\n    name: \"InvalidRequestException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ServiceUnavailableExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ServiceUnavailableException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ServiceUnavailableException(body, context);\n  const contents: ServiceUnavailableException = {\n    name: \"ServiceUnavailableException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1TextSizeLimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TextSizeLimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1TextSizeLimitExceededException(body, context);\n  const contents: TextSizeLimitExceededException = {\n    name: \"TextSizeLimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1TooManyRequestsExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TooManyRequestsException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1TooManyRequestsException(body, context);\n  const contents: TooManyRequestsException = {\n    name: \"TooManyRequestsException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<UnsupportedLanguagePairException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1UnsupportedLanguagePairException(body, context);\n  const contents: UnsupportedLanguagePairException = {\n    name: \"UnsupportedLanguagePairException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1CreateParallelDataRequest = (\n  input: CreateParallelDataRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EncryptionKey !== undefined &&\n      input.EncryptionKey !== null && {\n        EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context),\n      }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.ParallelDataConfig !== undefined &&\n      input.ParallelDataConfig !== null && {\n        ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1DeleteParallelDataRequest = (\n  input: DeleteParallelDataRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n  };\n};\n\nconst serializeAws_json1_1DeleteTerminologyRequest = (\n  input: DeleteTerminologyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n  };\n};\n\nconst serializeAws_json1_1DescribeTextTranslationJobRequest = (\n  input: DescribeTextTranslationJobRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobId !== undefined && input.JobId !== null && { JobId: input.JobId }),\n  };\n};\n\nconst serializeAws_json1_1EncryptionKey = (input: EncryptionKey, context: __SerdeContext): any => {\n  return {\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1GetParallelDataRequest = (input: GetParallelDataRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n  };\n};\n\nconst serializeAws_json1_1GetTerminologyRequest = (input: GetTerminologyRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.TerminologyDataFormat !== undefined &&\n      input.TerminologyDataFormat !== null && { TerminologyDataFormat: input.TerminologyDataFormat }),\n  };\n};\n\nconst serializeAws_json1_1ImportTerminologyRequest = (\n  input: ImportTerminologyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EncryptionKey !== undefined &&\n      input.EncryptionKey !== null && {\n        EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context),\n      }),\n    ...(input.MergeStrategy !== undefined && input.MergeStrategy !== null && { MergeStrategy: input.MergeStrategy }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.TerminologyData !== undefined &&\n      input.TerminologyData !== null && {\n        TerminologyData: serializeAws_json1_1TerminologyData(input.TerminologyData, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1InputDataConfig = (input: InputDataConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.ContentType !== undefined && input.ContentType !== null && { ContentType: input.ContentType }),\n    ...(input.S3Uri !== undefined && input.S3Uri !== null && { S3Uri: input.S3Uri }),\n  };\n};\n\nconst serializeAws_json1_1ListParallelDataRequest = (input: ListParallelDataRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1ListTerminologiesRequest = (\n  input: ListTerminologiesRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1ListTextTranslationJobsRequest = (\n  input: ListTextTranslationJobsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Filter !== undefined &&\n      input.Filter !== null && { Filter: serializeAws_json1_1TextTranslationJobFilter(input.Filter, context) }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1OutputDataConfig = (input: OutputDataConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.S3Uri !== undefined && input.S3Uri !== null && { S3Uri: input.S3Uri }),\n  };\n};\n\nconst serializeAws_json1_1ParallelDataConfig = (input: ParallelDataConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.Format !== undefined && input.Format !== null && { Format: input.Format }),\n    ...(input.S3Uri !== undefined && input.S3Uri !== null && { S3Uri: input.S3Uri }),\n  };\n};\n\nconst serializeAws_json1_1ResourceNameList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1StartTextTranslationJobRequest = (\n  input: StartTextTranslationJobRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n    ...(input.DataAccessRoleArn !== undefined &&\n      input.DataAccessRoleArn !== null && { DataAccessRoleArn: input.DataAccessRoleArn }),\n    ...(input.InputDataConfig !== undefined &&\n      input.InputDataConfig !== null && {\n        InputDataConfig: serializeAws_json1_1InputDataConfig(input.InputDataConfig, context),\n      }),\n    ...(input.JobName !== undefined && input.JobName !== null && { JobName: input.JobName }),\n    ...(input.OutputDataConfig !== undefined &&\n      input.OutputDataConfig !== null && {\n        OutputDataConfig: serializeAws_json1_1OutputDataConfig(input.OutputDataConfig, context),\n      }),\n    ...(input.ParallelDataNames !== undefined &&\n      input.ParallelDataNames !== null && {\n        ParallelDataNames: serializeAws_json1_1ResourceNameList(input.ParallelDataNames, context),\n      }),\n    ...(input.SourceLanguageCode !== undefined &&\n      input.SourceLanguageCode !== null && { SourceLanguageCode: input.SourceLanguageCode }),\n    ...(input.TargetLanguageCodes !== undefined &&\n      input.TargetLanguageCodes !== null && {\n        TargetLanguageCodes: serializeAws_json1_1TargetLanguageCodeStringList(input.TargetLanguageCodes, context),\n      }),\n    ...(input.TerminologyNames !== undefined &&\n      input.TerminologyNames !== null && {\n        TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1StopTextTranslationJobRequest = (\n  input: StopTextTranslationJobRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobId !== undefined && input.JobId !== null && { JobId: input.JobId }),\n  };\n};\n\nconst serializeAws_json1_1TargetLanguageCodeStringList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1TerminologyData = (input: TerminologyData, context: __SerdeContext): any => {\n  return {\n    ...(input.File !== undefined && input.File !== null && { File: context.base64Encoder(input.File) }),\n    ...(input.Format !== undefined && input.Format !== null && { Format: input.Format }),\n  };\n};\n\nconst serializeAws_json1_1TextTranslationJobFilter = (\n  input: TextTranslationJobFilter,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobName !== undefined && input.JobName !== null && { JobName: input.JobName }),\n    ...(input.JobStatus !== undefined && input.JobStatus !== null && { JobStatus: input.JobStatus }),\n    ...(input.SubmittedAfterTime !== undefined &&\n      input.SubmittedAfterTime !== null && {\n        SubmittedAfterTime: Math.round(input.SubmittedAfterTime.getTime() / 1000),\n      }),\n    ...(input.SubmittedBeforeTime !== undefined &&\n      input.SubmittedBeforeTime !== null && {\n        SubmittedBeforeTime: Math.round(input.SubmittedBeforeTime.getTime() / 1000),\n      }),\n  };\n};\n\nconst serializeAws_json1_1TranslateTextRequest = (input: TranslateTextRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.SourceLanguageCode !== undefined &&\n      input.SourceLanguageCode !== null && { SourceLanguageCode: input.SourceLanguageCode }),\n    ...(input.TargetLanguageCode !== undefined &&\n      input.TargetLanguageCode !== null && { TargetLanguageCode: input.TargetLanguageCode }),\n    ...(input.TerminologyNames !== undefined &&\n      input.TerminologyNames !== null && {\n        TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context),\n      }),\n    ...(input.Text !== undefined && input.Text !== null && { Text: input.Text }),\n  };\n};\n\nconst serializeAws_json1_1UpdateParallelDataRequest = (\n  input: UpdateParallelDataRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.ParallelDataConfig !== undefined &&\n      input.ParallelDataConfig !== null && {\n        ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context),\n      }),\n  };\n};\n\nconst deserializeAws_json1_1AppliedTerminology = (output: any, context: __SerdeContext): AppliedTerminology => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Terms:\n      output.Terms !== undefined && output.Terms !== null\n        ? deserializeAws_json1_1TermList(output.Terms, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1AppliedTerminologyList = (output: any, context: __SerdeContext): AppliedTerminology[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1AppliedTerminology(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ConcurrentModificationException = (\n  output: any,\n  context: __SerdeContext\n): ConcurrentModificationException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConflictException = (output: any, context: __SerdeContext): ConflictException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1CreateParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): CreateParallelDataResponse => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeleteParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): DeleteParallelDataResponse => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeTextTranslationJobResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeTextTranslationJobResponse => {\n  return {\n    TextTranslationJobProperties:\n      output.TextTranslationJobProperties !== undefined && output.TextTranslationJobProperties !== null\n        ? deserializeAws_json1_1TextTranslationJobProperties(output.TextTranslationJobProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DetectedLanguageLowConfidenceException = (\n  output: any,\n  context: __SerdeContext\n): DetectedLanguageLowConfidenceException => {\n  return {\n    DetectedLanguageCode:\n      output.DetectedLanguageCode !== undefined && output.DetectedLanguageCode !== null\n        ? output.DetectedLanguageCode\n        : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EncryptionKey = (output: any, context: __SerdeContext): EncryptionKey => {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): GetParallelDataResponse => {\n  return {\n    AuxiliaryDataLocation:\n      output.AuxiliaryDataLocation !== undefined && output.AuxiliaryDataLocation !== null\n        ? deserializeAws_json1_1ParallelDataDataLocation(output.AuxiliaryDataLocation, context)\n        : undefined,\n    DataLocation:\n      output.DataLocation !== undefined && output.DataLocation !== null\n        ? deserializeAws_json1_1ParallelDataDataLocation(output.DataLocation, context)\n        : undefined,\n    LatestUpdateAttemptAuxiliaryDataLocation:\n      output.LatestUpdateAttemptAuxiliaryDataLocation !== undefined &&\n      output.LatestUpdateAttemptAuxiliaryDataLocation !== null\n        ? deserializeAws_json1_1ParallelDataDataLocation(output.LatestUpdateAttemptAuxiliaryDataLocation, context)\n        : undefined,\n    ParallelDataProperties:\n      output.ParallelDataProperties !== undefined && output.ParallelDataProperties !== null\n        ? deserializeAws_json1_1ParallelDataProperties(output.ParallelDataProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetTerminologyResponse = (output: any, context: __SerdeContext): GetTerminologyResponse => {\n  return {\n    TerminologyDataLocation:\n      output.TerminologyDataLocation !== undefined && output.TerminologyDataLocation !== null\n        ? deserializeAws_json1_1TerminologyDataLocation(output.TerminologyDataLocation, context)\n        : undefined,\n    TerminologyProperties:\n      output.TerminologyProperties !== undefined && output.TerminologyProperties !== null\n        ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ImportTerminologyResponse = (\n  output: any,\n  context: __SerdeContext\n): ImportTerminologyResponse => {\n  return {\n    TerminologyProperties:\n      output.TerminologyProperties !== undefined && output.TerminologyProperties !== null\n        ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InputDataConfig = (output: any, context: __SerdeContext): InputDataConfig => {\n  return {\n    ContentType: output.ContentType !== undefined && output.ContentType !== null ? output.ContentType : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InternalServerException = (\n  output: any,\n  context: __SerdeContext\n): InternalServerException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidFilterException = (output: any, context: __SerdeContext): InvalidFilterException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidParameterValueException = (\n  output: any,\n  context: __SerdeContext\n): InvalidParameterValueException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidRequestException = (\n  output: any,\n  context: __SerdeContext\n): InvalidRequestException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1JobDetails = (output: any, context: __SerdeContext): JobDetails => {\n  return {\n    DocumentsWithErrorsCount:\n      output.DocumentsWithErrorsCount !== undefined && output.DocumentsWithErrorsCount !== null\n        ? output.DocumentsWithErrorsCount\n        : undefined,\n    InputDocumentsCount:\n      output.InputDocumentsCount !== undefined && output.InputDocumentsCount !== null\n        ? output.InputDocumentsCount\n        : undefined,\n    TranslatedDocumentsCount:\n      output.TranslatedDocumentsCount !== undefined && output.TranslatedDocumentsCount !== null\n        ? output.TranslatedDocumentsCount\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LanguageCodeStringList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): ListParallelDataResponse => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    ParallelDataPropertiesList:\n      output.ParallelDataPropertiesList !== undefined && output.ParallelDataPropertiesList !== null\n        ? deserializeAws_json1_1ParallelDataPropertiesList(output.ParallelDataPropertiesList, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTerminologiesResponse = (\n  output: any,\n  context: __SerdeContext\n): ListTerminologiesResponse => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TerminologyPropertiesList:\n      output.TerminologyPropertiesList !== undefined && output.TerminologyPropertiesList !== null\n        ? deserializeAws_json1_1TerminologyPropertiesList(output.TerminologyPropertiesList, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTextTranslationJobsResponse = (\n  output: any,\n  context: __SerdeContext\n): ListTextTranslationJobsResponse => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TextTranslationJobPropertiesList:\n      output.TextTranslationJobPropertiesList !== undefined && output.TextTranslationJobPropertiesList !== null\n        ? deserializeAws_json1_1TextTranslationJobPropertiesList(output.TextTranslationJobPropertiesList, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1OutputDataConfig = (output: any, context: __SerdeContext): OutputDataConfig => {\n  return {\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataConfig = (output: any, context: __SerdeContext): ParallelDataConfig => {\n  return {\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataDataLocation = (\n  output: any,\n  context: __SerdeContext\n): ParallelDataDataLocation => {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType:\n      output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataProperties = (output: any, context: __SerdeContext): ParallelDataProperties => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt:\n      output.CreatedAt !== undefined && output.CreatedAt !== null\n        ? new Date(Math.round(output.CreatedAt * 1000))\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey:\n      output.EncryptionKey !== undefined && output.EncryptionKey !== null\n        ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context)\n        : undefined,\n    FailedRecordCount:\n      output.FailedRecordCount !== undefined && output.FailedRecordCount !== null\n        ? output.FailedRecordCount\n        : undefined,\n    ImportedDataSize:\n      output.ImportedDataSize !== undefined && output.ImportedDataSize !== null ? output.ImportedDataSize : undefined,\n    ImportedRecordCount:\n      output.ImportedRecordCount !== undefined && output.ImportedRecordCount !== null\n        ? output.ImportedRecordCount\n        : undefined,\n    LastUpdatedAt:\n      output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null\n        ? new Date(Math.round(output.LastUpdatedAt * 1000))\n        : undefined,\n    LatestUpdateAttemptAt:\n      output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null\n        ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000))\n        : undefined,\n    LatestUpdateAttemptStatus:\n      output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null\n        ? output.LatestUpdateAttemptStatus\n        : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    ParallelDataConfig:\n      output.ParallelDataConfig !== undefined && output.ParallelDataConfig !== null\n        ? deserializeAws_json1_1ParallelDataConfig(output.ParallelDataConfig, context)\n        : undefined,\n    SkippedRecordCount:\n      output.SkippedRecordCount !== undefined && output.SkippedRecordCount !== null\n        ? output.SkippedRecordCount\n        : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n    TargetLanguageCodes:\n      output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null\n        ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataPropertiesList = (\n  output: any,\n  context: __SerdeContext\n): ParallelDataProperties[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ParallelDataProperties(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ResourceNameList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ServiceUnavailableException = (\n  output: any,\n  context: __SerdeContext\n): ServiceUnavailableException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StartTextTranslationJobResponse = (\n  output: any,\n  context: __SerdeContext\n): StartTextTranslationJobResponse => {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StopTextTranslationJobResponse = (\n  output: any,\n  context: __SerdeContext\n): StopTextTranslationJobResponse => {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TargetLanguageCodeStringList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1Term = (output: any, context: __SerdeContext): Term => {\n  return {\n    SourceText: output.SourceText !== undefined && output.SourceText !== null ? output.SourceText : undefined,\n    TargetText: output.TargetText !== undefined && output.TargetText !== null ? output.TargetText : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TerminologyDataLocation = (\n  output: any,\n  context: __SerdeContext\n): TerminologyDataLocation => {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType:\n      output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TerminologyProperties = (output: any, context: __SerdeContext): TerminologyProperties => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt:\n      output.CreatedAt !== undefined && output.CreatedAt !== null\n        ? new Date(Math.round(output.CreatedAt * 1000))\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey:\n      output.EncryptionKey !== undefined && output.EncryptionKey !== null\n        ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context)\n        : undefined,\n    LastUpdatedAt:\n      output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null\n        ? new Date(Math.round(output.LastUpdatedAt * 1000))\n        : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SizeBytes: output.SizeBytes !== undefined && output.SizeBytes !== null ? output.SizeBytes : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    TargetLanguageCodes:\n      output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null\n        ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context)\n        : undefined,\n    TermCount: output.TermCount !== undefined && output.TermCount !== null ? output.TermCount : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TerminologyPropertiesList = (\n  output: any,\n  context: __SerdeContext\n): TerminologyProperties[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1TerminologyProperties(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1TermList = (output: any, context: __SerdeContext): Term[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Term(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1TextSizeLimitExceededException = (\n  output: any,\n  context: __SerdeContext\n): TextSizeLimitExceededException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TextTranslationJobProperties = (\n  output: any,\n  context: __SerdeContext\n): TextTranslationJobProperties => {\n  return {\n    DataAccessRoleArn:\n      output.DataAccessRoleArn !== undefined && output.DataAccessRoleArn !== null\n        ? output.DataAccessRoleArn\n        : undefined,\n    EndTime:\n      output.EndTime !== undefined && output.EndTime !== null ? new Date(Math.round(output.EndTime * 1000)) : undefined,\n    InputDataConfig:\n      output.InputDataConfig !== undefined && output.InputDataConfig !== null\n        ? deserializeAws_json1_1InputDataConfig(output.InputDataConfig, context)\n        : undefined,\n    JobDetails:\n      output.JobDetails !== undefined && output.JobDetails !== null\n        ? deserializeAws_json1_1JobDetails(output.JobDetails, context)\n        : undefined,\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobName: output.JobName !== undefined && output.JobName !== null ? output.JobName : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    OutputDataConfig:\n      output.OutputDataConfig !== undefined && output.OutputDataConfig !== null\n        ? deserializeAws_json1_1OutputDataConfig(output.OutputDataConfig, context)\n        : undefined,\n    ParallelDataNames:\n      output.ParallelDataNames !== undefined && output.ParallelDataNames !== null\n        ? deserializeAws_json1_1ResourceNameList(output.ParallelDataNames, context)\n        : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    SubmittedTime:\n      output.SubmittedTime !== undefined && output.SubmittedTime !== null\n        ? new Date(Math.round(output.SubmittedTime * 1000))\n        : undefined,\n    TargetLanguageCodes:\n      output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null\n        ? deserializeAws_json1_1TargetLanguageCodeStringList(output.TargetLanguageCodes, context)\n        : undefined,\n    TerminologyNames:\n      output.TerminologyNames !== undefined && output.TerminologyNames !== null\n        ? deserializeAws_json1_1ResourceNameList(output.TerminologyNames, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TextTranslationJobPropertiesList = (\n  output: any,\n  context: __SerdeContext\n): TextTranslationJobProperties[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1TextTranslationJobProperties(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1TooManyRequestsException = (\n  output: any,\n  context: __SerdeContext\n): TooManyRequestsException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TranslateTextResponse = (output: any, context: __SerdeContext): TranslateTextResponse => {\n  return {\n    AppliedTerminologies:\n      output.AppliedTerminologies !== undefined && output.AppliedTerminologies !== null\n        ? deserializeAws_json1_1AppliedTerminologyList(output.AppliedTerminologies, context)\n        : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    TargetLanguageCode:\n      output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null\n        ? output.TargetLanguageCode\n        : undefined,\n    TranslatedText:\n      output.TranslatedText !== undefined && output.TranslatedText !== null ? output.TranslatedText : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UnsupportedLanguagePairException = (\n  output: any,\n  context: __SerdeContext\n): UnsupportedLanguagePairException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    TargetLanguageCode:\n      output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null\n        ? output.TargetLanguageCode\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UpdateParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): UpdateParallelDataResponse => {\n  return {\n    LatestUpdateAttemptAt:\n      output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null\n        ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000))\n        : undefined,\n    LatestUpdateAttemptStatus:\n      output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null\n        ? output.LatestUpdateAttemptStatus\n        : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}