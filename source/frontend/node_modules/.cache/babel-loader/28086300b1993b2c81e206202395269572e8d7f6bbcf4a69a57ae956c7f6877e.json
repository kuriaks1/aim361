{"ast":null,"code":"import { __values } from \"tslib\";\nimport { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\n/**\n * @internal\n */\nexport function prepareRequest(request) {\n  var e_1, _a;\n  // Create a clone of the request object that does not clone the body\n  request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n  try {\n    for (var _b = __values(Object.keys(request.headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var headerName = _c.value;\n      if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n        delete request.headers[headerName];\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return request;\n}","map":{"version":3,"mappings":";AAEA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,iBAAiB,QAAQ,aAAa;AAE/C;;;AAGA,OAAM,SAAUC,cAAcA,CAACC,OAAoB;;EACjD;EACAA,OAAO,GAAG,OAAQA,OAAe,CAACC,KAAK,KAAK,UAAU,GAAID,OAAe,CAACC,KAAK,EAAE,GAAGJ,YAAY,CAACG,OAAO,CAAC;;IAEzG,KAAyB,wBAAM,CAACE,IAAI,CAACF,OAAO,CAACG,OAAO,CAAC,6CAAE;MAAlD,IAAMC,UAAU;MACnB,IAAIN,iBAAiB,CAACO,OAAO,CAACD,UAAU,CAACE,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;QAC5D,OAAON,OAAO,CAACG,OAAO,CAACC,UAAU,CAAC;;;;;;;;;;;;;;EAItC,OAAOJ,OAAO;AAChB","names":["cloneRequest","GENERATED_HEADERS","prepareRequest","request","clone","keys","headers","headerName","indexOf","toLowerCase"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-sdk/signature-v4/src/prepareRequest.ts"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/types\";\n\nimport { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\n\n/**\n * @internal\n */\nexport function prepareRequest(request: HttpRequest): HttpRequest {\n  // Create a clone of the request object that does not clone the body\n  request = typeof (request as any).clone === \"function\" ? (request as any).clone() : cloneRequest(request);\n\n  for (const headerName of Object.keys(request.headers)) {\n    if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n      delete request.headers[headerName];\n    }\n  }\n\n  return request;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}