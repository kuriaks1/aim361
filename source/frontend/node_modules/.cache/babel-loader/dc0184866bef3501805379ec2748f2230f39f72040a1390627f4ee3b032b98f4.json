{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __awaiter, __generator } from \"tslib\";\nimport PlatformNotSupportedError from './PlatformNotSupportedError';\nvar PushNotification = /** @class */function () {\n  function PushNotification() {\n    var _this = this;\n    /**\n     * Configure PushNotification\n     * @param {Object} config - PushNotification configuration object\n     */\n    this.configure = function (_) {\n      if (_ === void 0) {\n        _ = {};\n      }\n      throw new PlatformNotSupportedError();\n    };\n    /**\n     * Get a plugin from added plugins\n     * @param {string} providerName - the name of the plugin to get\n     */\n    this.getPluggable = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    /**\n     * Add plugin into PushNotification\n     * @param {PushNotificationProvider} pluggable - an instance of the plugin\n     */\n    this.addPluggable = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    /**\n     * Remove a plugin from added plugins\n     * @param {string} providerName - the name of the plugin to remove\n     */\n    this.removePluggable = function () {\n      throw new PlatformNotSupportedError();\n    };\n    this.enable = function () {\n      throw new PlatformNotSupportedError();\n    };\n    this.identifyUser = function () {\n      throw new PlatformNotSupportedError();\n    };\n    this.getLaunchNotification = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw new PlatformNotSupportedError();\n        });\n      });\n    };\n    this.getBadgeCount = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw new PlatformNotSupportedError();\n        });\n      });\n    };\n    this.setBadgeCount = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    this.getPermissionStatus = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw new PlatformNotSupportedError();\n        });\n      });\n    };\n    this.requestPermissions = function (_) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw new PlatformNotSupportedError();\n        });\n      });\n    };\n    this.onNotificationReceivedInBackground = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    this.onNotificationReceivedInForeground = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    this.onTokenReceived = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n    this.onNotificationOpened = function (_) {\n      throw new PlatformNotSupportedError();\n    };\n  }\n  /**\n   * Get the name of this module\n   * @returns {string} name of this module\n   */\n  PushNotification.prototype.getModuleName = function () {\n    throw new PlatformNotSupportedError();\n  };\n  return PushNotification;\n}();\nexport default PushNotification;","map":{"version":3,"mappings":"AAAA;AACA;;AAEA,OAAOA,yBAAyB,MAAM,6BAA6B;AAanE;EAAA;IAAA;IACC;;;;IAIA,cAAS,GAAG,UAACC,CAA8B;MAA9B;QAAAA,MAA8B;MAAA;MAC1C,MAAM,IAAID,yBAAyB,EAAE;IACtC,CAAC;IAUD;;;;IAIA,iBAAY,GAAG,UAACC,CAAS;MACxB,MAAM,IAAID,yBAAyB,EAAE;IACtC,CAAC;IAED;;;;IAIA,iBAAY,GAAG,UAACC,CAA2B;MAC1C,MAAM,IAAID,yBAAyB,EAAE;IACtC,CAAC;IAED;;;;IAIA,oBAAe,GAAG;MACjB,MAAM,IAAIA,yBAAyB,EAAE;IACtC,CAAC;IAED,WAAM,GAAG;MACR,MAAM,IAAIA,yBAAyB,EAAE;IACtC,CAAC;IAED,iBAAY,GAAG;MACd,MAAM,IAAIA,yBAAyB,EAAE;IACtC,CAAC;IAED,0BAAqB,GAAG;MAAA;;UACvB,MAAM,IAAIA,yBAAyB,EAAE;;;KACrC;IAED,kBAAa,GAAG;MAAA;;UACf,MAAM,IAAIA,yBAAyB,EAAE;;;KACrC;IAED,kBAAa,GAAG,UAACC,CAAS;MACzB,MAAM,IAAID,yBAAyB,EAAE;IACtC,CAAC;IAED,wBAAmB,GAAG;MAAA;;UACrB,MAAM,IAAIA,yBAAyB,EAAE;;;KACrC;IAED,uBAAkB,GAAG,UACpBC,CAA+B;MAAA;;UAE/B,MAAM,IAAID,yBAAyB,EAAE;;;KACrC;IAED,uCAAkC,GAAG,UACpCC,CAAmC;MAEnC,MAAM,IAAID,yBAAyB,EAAE;IACtC,CAAC;IAED,uCAAkC,GAAG,UACpCC,CAAmC;MAEnC,MAAM,IAAID,yBAAyB,EAAE;IACtC,CAAC;IAED,oBAAe,GAAG,UAACC,CAAyB;MAC3C,MAAM,IAAID,yBAAyB,EAAE;IACtC,CAAC;IAED,yBAAoB,GAAG,UAACC,CAAmC;MAC1D,MAAM,IAAID,yBAAyB,EAAE;IACtC,CAAC;EACF;EAjFC;;;;EAIAE,wCAAa,GAAb;IACC,MAAM,IAAIF,yBAAyB,EAAE;EACtC,CAAC;EA2EF,uBAAC;AAAD,CAAC,CA1FD","names":["PlatformNotSupportedError","_","PushNotification"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-amplify/notifications/src/PushNotification/PushNotification.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport PlatformNotSupportedError from './PlatformNotSupportedError';\nimport {\n\tNotificationsSubCategory,\n\tOnPushNotificationMessageHandler,\n\tOnTokenReceivedHandler,\n\tPushNotificationConfig,\n\tPushNotificationInterface,\n\tPushNotificationMessage,\n\tPushNotificationPermissions,\n\tPushNotificationPermissionStatus,\n\tPushNotificationProvider,\n} from './types';\n\nexport default class PushNotification implements PushNotificationInterface {\n\t/**\n\t * Configure PushNotification\n\t * @param {Object} config - PushNotification configuration object\n\t */\n\tconfigure = (_: PushNotificationConfig = {}): PushNotificationConfig => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\t/**\n\t * Get the name of this module\n\t * @returns {string} name of this module\n\t */\n\tgetModuleName(): NotificationsSubCategory {\n\t\tthrow new PlatformNotSupportedError();\n\t}\n\n\t/**\n\t * Get a plugin from added plugins\n\t * @param {string} providerName - the name of the plugin to get\n\t */\n\tgetPluggable = (_: string) => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\t/**\n\t * Add plugin into PushNotification\n\t * @param {PushNotificationProvider} pluggable - an instance of the plugin\n\t */\n\taddPluggable = (_: PushNotificationProvider): void => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\t/**\n\t * Remove a plugin from added plugins\n\t * @param {string} providerName - the name of the plugin to remove\n\t */\n\tremovePluggable = (): void => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tenable = (): void => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tidentifyUser = (): Promise<void[]> => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tgetLaunchNotification = async (): Promise<PushNotificationMessage> => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tgetBadgeCount = async (): Promise<number | null> => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tsetBadgeCount = (_: number): void => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tgetPermissionStatus = async (): Promise<PushNotificationPermissionStatus> => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\trequestPermissions = async (\n\t\t_?: PushNotificationPermissions\n\t): Promise<boolean> => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tonNotificationReceivedInBackground = (\n\t\t_: OnPushNotificationMessageHandler\n\t): any => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tonNotificationReceivedInForeground = (\n\t\t_: OnPushNotificationMessageHandler\n\t): any => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tonTokenReceived = (_: OnTokenReceivedHandler): any => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n\n\tonNotificationOpened = (_: OnPushNotificationMessageHandler): any => {\n\t\tthrow new PlatformNotSupportedError();\n\t};\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}