{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteLogStreamRequest } from \"../models/models_0\";\nimport { deserializeAws_json1_1DeleteLogStreamCommand, serializeAws_json1_1DeleteLogStreamCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Deletes the specified log stream and permanently deletes all the archived log events associated\n *       with the log stream.</p>\n */\nvar DeleteLogStreamCommand = /** @class */function (_super) {\n  __extends(DeleteLogStreamCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function DeleteLogStreamCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  DeleteLogStreamCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"CloudWatchLogsClient\";\n    var commandName = \"DeleteLogStreamCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteLogStreamRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  DeleteLogStreamCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1DeleteLogStreamCommand(input, context);\n  };\n  DeleteLogStreamCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1DeleteLogStreamCommand(output, context);\n  };\n  return DeleteLogStreamCommand;\n}($Command);\nexport { DeleteLogStreamCommand };","map":{"version":3,"mappings":";AACA,SAASA,sBAAsB,QAAQ,oBAAoB;AAC3D,SACEC,4CAA4C,EAC5CC,0CAA0C,QACrC,0BAA0B;AACjC,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAc5D;;;;AAIA;EAA4CC;EAK1C;EACA;EAEA,gCAAqBC,KAAkC;IAAvD;IACE;IACAC,iBAAO;IAFYC,WAAK,GAALF,KAAK;;IAGxB;EACF;EAEA;;;EAGAG,kDAAiB,GAAjB,UACEC,WAAmE,EACnEC,aAAiD,EACjDC,OAA8B;IAE9B,IAAI,CAACC,eAAe,CAACC,GAAG,CAACZ,cAAc,CAACS,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IAEzF,IAAMC,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IAE9C,UAAM,GAAKF,aAAa,OAAlB;IACd,IAAMQ,UAAU,GAAG,sBAAsB;IACzC,IAAMC,WAAW,GAAG,wBAAwB;IAC5C,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM;MACNH,UAAU;MACVC,WAAW;MACXG,uBAAuB,EAAExB,sBAAsB,CAACyB,kBAAkB;MAClEC,wBAAwB,EAAE,UAACC,MAAW;QAAK,aAAM;MAAN;KAC5C;IACO,kBAAc,GAAKf,aAAa,eAAlB;IACtB,OAAOM,KAAK,CAACU,OAAO,CAClB,UAACC,OAAsC;MACrC,qBAAc,CAACC,MAAM,CAACD,OAAO,CAACA,OAAwB,EAAEhB,OAAO,IAAI,EAAE,CAAC;IAAtE,CAAsE,EACxES,uBAAuB,CACxB;EACH,CAAC;EAEOZ,0CAAS,GAAjB,UAAkBH,KAAkC,EAAEwB,OAAuB;IAC3E,OAAO7B,0CAA0C,CAACK,KAAK,EAAEwB,OAAO,CAAC;EACnE,CAAC;EAEOrB,4CAAW,GAAnB,UAAoBiB,MAAsB,EAAEI,OAAuB;IACjE,OAAO9B,4CAA4C,CAAC0B,MAAM,EAAEI,OAAO,CAAC;EACtE,CAAC;EAIH,6BAAC;AAAD,CAAC,CAtD2C1B,QAAQ","names":["DeleteLogStreamRequest","deserializeAws_json1_1DeleteLogStreamCommand","serializeAws_json1_1DeleteLogStreamCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","DeleteLogStreamCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-sdk/client-cloudwatch-logs/commands/DeleteLogStreamCommand.ts"],"sourcesContent":["import { CloudWatchLogsClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../CloudWatchLogsClient\";\nimport { DeleteLogStreamRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteLogStreamCommand,\n  serializeAws_json1_1DeleteLogStreamCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteLogStreamCommandInput = DeleteLogStreamRequest;\nexport type DeleteLogStreamCommandOutput = __MetadataBearer;\n\n/**\n * <p>Deletes the specified log stream and permanently deletes all the archived log events associated\n *       with the log stream.</p>\n */\nexport class DeleteLogStreamCommand extends $Command<\n  DeleteLogStreamCommandInput,\n  DeleteLogStreamCommandOutput,\n  CloudWatchLogsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteLogStreamCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: CloudWatchLogsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteLogStreamCommandInput, DeleteLogStreamCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"CloudWatchLogsClient\";\n    const commandName = \"DeleteLogStreamCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteLogStreamRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteLogStreamCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteLogStreamCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteLogStreamCommandOutput> {\n    return deserializeAws_json1_1DeleteLogStreamCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}