{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nexport var serializeAws_json1_1AddTagsToStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.AddTagsToStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1CreateStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.CreateStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DecreaseStreamRetentionPeriod\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DeleteStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeregisterStreamConsumerCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DeregisterStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeLimitsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeLimits\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamConsumerCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamSummaryCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeStreamSummary\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DisableEnhancedMonitoringCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DisableEnhancedMonitoring\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1EnableEnhancedMonitoringCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.EnableEnhancedMonitoring\"\n      };\n      body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetRecordsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.GetRecords\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetShardIteratorCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.GetShardIterator\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.IncreaseStreamRetentionPeriod\"\n      };\n      body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListShardsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListShards\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListStreamConsumersCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListStreamConsumers\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListStreamsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListStreams\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTagsForStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListTagsForStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1MergeShardsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.MergeShards\"\n      };\n      body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRecordCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.PutRecord\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRecordsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.PutRecords\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1RegisterStreamConsumerCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.RegisterStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1RemoveTagsFromStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.RemoveTagsFromStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1SplitShardCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.SplitShard\"\n      };\n      body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartStreamEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.StartStreamEncryption\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StopStreamEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.StopStreamEncryption\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1SubscribeToShardCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.SubscribeToShard\"\n      };\n      body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1UpdateShardCountCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.UpdateShardCount\"\n      };\n      body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var deserializeAws_json1_1AddTagsToStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1AddTagsToStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1AddTagsToStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1CreateStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1CreateStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1CreateStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DeleteStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DeleteStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DeleteStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DeregisterStreamConsumerCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DeregisterStreamConsumerCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeLimitsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeLimitsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeLimitsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeStreamConsumerCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeStreamConsumerCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeStreamSummaryCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeStreamSummaryCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n    var _e;\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n          }\n          return [3 /*break*/, 6];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 7];\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DisableEnhancedMonitoringCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DisableEnhancedMonitoringCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1EnableEnhancedMonitoringCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1EnableEnhancedMonitoringCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1GetRecordsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1GetRecordsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1GetRecordsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n    var _o;\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _o = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_o.body = _p.sent(), _o)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ExpiredIteratorException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#ExpiredIteratorException\":\n              return [3 /*break*/, 2];\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 6];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 8];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 10];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 12];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 14];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 16];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 18];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n          }\n          return [3 /*break*/, 22];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 20:\n          _m = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1GetShardIteratorCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1GetShardIteratorCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1GetShardIteratorCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListShardsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListShardsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListShardsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListShardsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListStreamConsumersCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListStreamConsumersCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListStreamConsumersCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n              return [3 /*break*/, 2];\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 4];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 8];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListStreamsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListStreamsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListStreamsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n    var _d;\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 2];\n          }\n          return [3 /*break*/, 4];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 5];\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListTagsForStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListTagsForStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListTagsForStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1MergeShardsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1MergeShardsCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1MergeShardsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1PutRecordCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1PutRecordCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1PutRecordCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    var _m;\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n          }\n          return [3 /*break*/, 20];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1PutRecordsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1PutRecordsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1PutRecordsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    var _m;\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3 /*break*/, 16];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 18];\n          }\n          return [3 /*break*/, 20];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 21];\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1RegisterStreamConsumerCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1RegisterStreamConsumerCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1RemoveTagsFromStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1RemoveTagsFromStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1SplitShardCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1SplitShardCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1SplitShardCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1StartStreamEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1StartStreamEncryptionCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1StartStreamEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n    var _o;\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _o = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_o.body = _p.sent(), _o)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3 /*break*/, 4];\n            case \"KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3 /*break*/, 6];\n            case \"KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3 /*break*/, 8];\n            case \"KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3 /*break*/, 10];\n            case \"KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3 /*break*/, 12];\n            case \"KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3 /*break*/, 14];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 16];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 18];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 18];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 20];\n          }\n          return [3 /*break*/, 22];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 18:\n          _l = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 20:\n          _m = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 23];\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1StopStreamEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1StopStreamEncryptionCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1StopStreamEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1SubscribeToShardCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1SubscribeToShardCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1SubscribeToShardCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1UpdateShardCountCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1UpdateShardCountCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1UpdateShardCountCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3 /*break*/, 2];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3 /*break*/, 4];\n            case \"ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ExpiredIteratorExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredIteratorException(body, context);\n      contents = __assign({\n        name: \"ExpiredIteratorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ExpiredNextTokenExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n      contents = __assign({\n        name: \"ExpiredNextTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InvalidArgumentExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidArgumentException(body, context);\n      contents = __assign({\n        name: \"InvalidArgumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSAccessDeniedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n      contents = __assign({\n        name: \"KMSAccessDeniedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSDisabledExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSDisabledException(body, context);\n      contents = __assign({\n        name: \"KMSDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSInvalidStateExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSInvalidStateException(body, context);\n      contents = __assign({\n        name: \"KMSInvalidStateException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSNotFoundException(body, context);\n      contents = __assign({\n        name: \"KMSNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSOptInRequiredResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSOptInRequired(body, context);\n      contents = __assign({\n        name: \"KMSOptInRequired\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1KMSThrottlingExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSThrottlingException(body, context);\n      contents = __assign({\n        name: \"KMSThrottlingException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n      contents = __assign({\n        name: \"ProvisionedThroughputExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ResourceInUseExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceInUseException(body, context);\n      contents = __assign({\n        name: \"ResourceInUseException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n      contents = __assign({\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar serializeAws_json1_1AddTagsToStreamInput = function (input, context) {\n  return __assign(__assign({}, input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.Tags !== undefined && input.Tags !== null && {\n    Tags: serializeAws_json1_1TagMap(input.Tags, context)\n  });\n};\nvar serializeAws_json1_1CreateStreamInput = function (input, context) {\n  return __assign(__assign({}, input.ShardCount !== undefined && input.ShardCount !== null && {\n    ShardCount: input.ShardCount\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DecreaseStreamRetentionPeriodInput = function (input, context) {\n  return __assign(__assign({}, input.RetentionPeriodHours !== undefined && input.RetentionPeriodHours !== null && {\n    RetentionPeriodHours: input.RetentionPeriodHours\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DeleteStreamInput = function (input, context) {\n  return __assign(__assign({}, input.EnforceConsumerDeletion !== undefined && input.EnforceConsumerDeletion !== null && {\n    EnforceConsumerDeletion: input.EnforceConsumerDeletion\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DeregisterStreamConsumerInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && input.ConsumerARN !== null && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ConsumerName !== undefined && input.ConsumerName !== null && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  });\n};\nvar serializeAws_json1_1DescribeLimitsInput = function (input, context) {\n  return {};\n};\nvar serializeAws_json1_1DescribeStreamConsumerInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && input.ConsumerARN !== null && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ConsumerName !== undefined && input.ConsumerName !== null && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  });\n};\nvar serializeAws_json1_1DescribeStreamInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ExclusiveStartShardId !== undefined && input.ExclusiveStartShardId !== null && {\n    ExclusiveStartShardId: input.ExclusiveStartShardId\n  }), input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DescribeStreamSummaryInput = function (input, context) {\n  return __assign({}, input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1DisableEnhancedMonitoringInput = function (input, context) {\n  return __assign(__assign({}, input.ShardLevelMetrics !== undefined && input.ShardLevelMetrics !== null && {\n    ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1EnableEnhancedMonitoringInput = function (input, context) {\n  return __assign(__assign({}, input.ShardLevelMetrics !== undefined && input.ShardLevelMetrics !== null && {\n    ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1GetRecordsInput = function (input, context) {\n  return __assign(__assign({}, input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  }), input.ShardIterator !== undefined && input.ShardIterator !== null && {\n    ShardIterator: input.ShardIterator\n  });\n};\nvar serializeAws_json1_1GetShardIteratorInput = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.ShardId !== undefined && input.ShardId !== null && {\n    ShardId: input.ShardId\n  }), input.ShardIteratorType !== undefined && input.ShardIteratorType !== null && {\n    ShardIteratorType: input.ShardIteratorType\n  }), input.StartingSequenceNumber !== undefined && input.StartingSequenceNumber !== null && {\n    StartingSequenceNumber: input.StartingSequenceNumber\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  });\n};\nvar serializeAws_json1_1IncreaseStreamRetentionPeriodInput = function (input, context) {\n  return __assign(__assign({}, input.RetentionPeriodHours !== undefined && input.RetentionPeriodHours !== null && {\n    RetentionPeriodHours: input.RetentionPeriodHours\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1ListShardsInput = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.ExclusiveStartShardId !== undefined && input.ExclusiveStartShardId !== null && {\n    ExclusiveStartShardId: input.ExclusiveStartShardId\n  }), input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  }), input.ShardFilter !== undefined && input.ShardFilter !== null && {\n    ShardFilter: serializeAws_json1_1ShardFilter(input.ShardFilter, context)\n  }), input.StreamCreationTimestamp !== undefined && input.StreamCreationTimestamp !== null && {\n    StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1ListStreamConsumersInput = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  }), input.StreamCreationTimestamp !== undefined && input.StreamCreationTimestamp !== null && {\n    StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000)\n  });\n};\nvar serializeAws_json1_1ListStreamsInput = function (input, context) {\n  return __assign(__assign({}, input.ExclusiveStartStreamName !== undefined && input.ExclusiveStartStreamName !== null && {\n    ExclusiveStartStreamName: input.ExclusiveStartStreamName\n  }), input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  });\n};\nvar serializeAws_json1_1ListTagsForStreamInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ExclusiveStartTagKey !== undefined && input.ExclusiveStartTagKey !== null && {\n    ExclusiveStartTagKey: input.ExclusiveStartTagKey\n  }), input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1MergeShardsInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.AdjacentShardToMerge !== undefined && input.AdjacentShardToMerge !== null && {\n    AdjacentShardToMerge: input.AdjacentShardToMerge\n  }), input.ShardToMerge !== undefined && input.ShardToMerge !== null && {\n    ShardToMerge: input.ShardToMerge\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1MetricsNameList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_json1_1PutRecordInput = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: context.base64Encoder(input.Data)\n  }), input.ExplicitHashKey !== undefined && input.ExplicitHashKey !== null && {\n    ExplicitHashKey: input.ExplicitHashKey\n  }), input.PartitionKey !== undefined && input.PartitionKey !== null && {\n    PartitionKey: input.PartitionKey\n  }), input.SequenceNumberForOrdering !== undefined && input.SequenceNumberForOrdering !== null && {\n    SequenceNumberForOrdering: input.SequenceNumberForOrdering\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1PutRecordsInput = function (input, context) {\n  return __assign(__assign({}, input.Records !== undefined && input.Records !== null && {\n    Records: serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1PutRecordsRequestEntry = function (input, context) {\n  return __assign(__assign(__assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: context.base64Encoder(input.Data)\n  }), input.ExplicitHashKey !== undefined && input.ExplicitHashKey !== null && {\n    ExplicitHashKey: input.ExplicitHashKey\n  }), input.PartitionKey !== undefined && input.PartitionKey !== null && {\n    PartitionKey: input.PartitionKey\n  });\n};\nvar serializeAws_json1_1PutRecordsRequestEntryList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return serializeAws_json1_1PutRecordsRequestEntry(entry, context);\n  });\n};\nvar serializeAws_json1_1RegisterStreamConsumerInput = function (input, context) {\n  return __assign(__assign({}, input.ConsumerName !== undefined && input.ConsumerName !== null && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  });\n};\nvar serializeAws_json1_1RemoveTagsFromStreamInput = function (input, context) {\n  return __assign(__assign({}, input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.TagKeys !== undefined && input.TagKeys !== null && {\n    TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context)\n  });\n};\nvar serializeAws_json1_1ShardFilter = function (input, context) {\n  return __assign(__assign(__assign({}, input.ShardId !== undefined && input.ShardId !== null && {\n    ShardId: input.ShardId\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\nvar serializeAws_json1_1SplitShardInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.NewStartingHashKey !== undefined && input.NewStartingHashKey !== null && {\n    NewStartingHashKey: input.NewStartingHashKey\n  }), input.ShardToSplit !== undefined && input.ShardToSplit !== null && {\n    ShardToSplit: input.ShardToSplit\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1StartingPosition = function (input, context) {\n  return __assign(__assign(__assign({}, input.SequenceNumber !== undefined && input.SequenceNumber !== null && {\n    SequenceNumber: input.SequenceNumber\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\nvar serializeAws_json1_1StartStreamEncryptionInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.EncryptionType !== undefined && input.EncryptionType !== null && {\n    EncryptionType: input.EncryptionType\n  }), input.KeyId !== undefined && input.KeyId !== null && {\n    KeyId: input.KeyId\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1StopStreamEncryptionInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.EncryptionType !== undefined && input.EncryptionType !== null && {\n    EncryptionType: input.EncryptionType\n  }), input.KeyId !== undefined && input.KeyId !== null && {\n    KeyId: input.KeyId\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\nvar serializeAws_json1_1SubscribeToShardInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && input.ConsumerARN !== null && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ShardId !== undefined && input.ShardId !== null && {\n    ShardId: input.ShardId\n  }), input.StartingPosition !== undefined && input.StartingPosition !== null && {\n    StartingPosition: serializeAws_json1_1StartingPosition(input.StartingPosition, context)\n  });\n};\nvar serializeAws_json1_1TagKeyList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_json1_1TagMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n    var _c = __read(_a, 2),\n      key = _c[0],\n      value = _c[1];\n    if (value === null) {\n      return acc;\n    }\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\nvar serializeAws_json1_1UpdateShardCountInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ScalingType !== undefined && input.ScalingType !== null && {\n    ScalingType: input.ScalingType\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.TargetShardCount !== undefined && input.TargetShardCount !== null && {\n    TargetShardCount: input.TargetShardCount\n  });\n};\nvar deserializeAws_json1_1ChildShard = function (output, context) {\n  return {\n    HashKeyRange: output.HashKeyRange !== undefined && output.HashKeyRange !== null ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context) : undefined,\n    ParentShards: output.ParentShards !== undefined && output.ParentShards !== null ? deserializeAws_json1_1ShardIdList(output.ParentShards, context) : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1ChildShardList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1ChildShard(entry, context);\n  });\n};\nvar deserializeAws_json1_1Consumer = function (output, context) {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000)) : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined\n  };\n};\nvar deserializeAws_json1_1ConsumerDescription = function (output, context) {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000)) : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined\n  };\n};\nvar deserializeAws_json1_1ConsumerList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1Consumer(entry, context);\n  });\n};\nvar deserializeAws_json1_1DescribeLimitsOutput = function (output, context) {\n  return {\n    OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    ShardLimit: output.ShardLimit !== undefined && output.ShardLimit !== null ? output.ShardLimit : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeStreamConsumerOutput = function (output, context) {\n  return {\n    ConsumerDescription: output.ConsumerDescription !== undefined && output.ConsumerDescription !== null ? deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context) : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeStreamOutput = function (output, context) {\n  return {\n    StreamDescription: output.StreamDescription !== undefined && output.StreamDescription !== null ? deserializeAws_json1_1StreamDescription(output.StreamDescription, context) : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeStreamSummaryOutput = function (output, context) {\n  return {\n    StreamDescriptionSummary: output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null ? deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context) : undefined\n  };\n};\nvar deserializeAws_json1_1EnhancedMetrics = function (output, context) {\n  return {\n    ShardLevelMetrics: output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context) : undefined\n  };\n};\nvar deserializeAws_json1_1EnhancedMonitoringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1EnhancedMetrics(entry, context);\n  });\n};\nvar deserializeAws_json1_1EnhancedMonitoringOutput = function (output, context) {\n  return {\n    CurrentShardLevelMetrics: output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context) : undefined,\n    DesiredShardLevelMetrics: output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined\n  };\n};\nvar deserializeAws_json1_1ExpiredIteratorException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1ExpiredNextTokenException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1GetRecordsOutput = function (output, context) {\n  return {\n    ChildShards: output.ChildShards !== undefined && output.ChildShards !== null ? deserializeAws_json1_1ChildShardList(output.ChildShards, context) : undefined,\n    MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null ? output.MillisBehindLatest : undefined,\n    NextShardIterator: output.NextShardIterator !== undefined && output.NextShardIterator !== null ? output.NextShardIterator : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1RecordList(output.Records, context) : undefined\n  };\n};\nvar deserializeAws_json1_1GetShardIteratorOutput = function (output, context) {\n  return {\n    ShardIterator: output.ShardIterator !== undefined && output.ShardIterator !== null ? output.ShardIterator : undefined\n  };\n};\nvar deserializeAws_json1_1HashKeyRange = function (output, context) {\n  return {\n    EndingHashKey: output.EndingHashKey !== undefined && output.EndingHashKey !== null ? output.EndingHashKey : undefined,\n    StartingHashKey: output.StartingHashKey !== undefined && output.StartingHashKey !== null ? output.StartingHashKey : undefined\n  };\n};\nvar deserializeAws_json1_1InternalFailureException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1InvalidArgumentException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSAccessDeniedException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSDisabledException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSInvalidStateException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSNotFoundException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSOptInRequired = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1KMSThrottlingException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1ListShardsOutput = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    Shards: output.Shards !== undefined && output.Shards !== null ? deserializeAws_json1_1ShardList(output.Shards, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ListStreamConsumersOutput = function (output, context) {\n  return {\n    Consumers: output.Consumers !== undefined && output.Consumers !== null ? deserializeAws_json1_1ConsumerList(output.Consumers, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\nvar deserializeAws_json1_1ListStreamsOutput = function (output, context) {\n  return {\n    HasMoreStreams: output.HasMoreStreams !== undefined && output.HasMoreStreams !== null ? output.HasMoreStreams : undefined,\n    StreamNames: output.StreamNames !== undefined && output.StreamNames !== null ? deserializeAws_json1_1StreamNameList(output.StreamNames, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ListTagsForStreamOutput = function (output, context) {\n  return {\n    HasMoreTags: output.HasMoreTags !== undefined && output.HasMoreTags !== null ? output.HasMoreTags : undefined,\n    Tags: output.Tags !== undefined && output.Tags !== null ? deserializeAws_json1_1TagList(output.Tags, context) : undefined\n  };\n};\nvar deserializeAws_json1_1MetricsNameList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1ProvisionedThroughputExceededException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordOutput = function (output, context) {\n  return {\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordsOutput = function (output, context) {\n  return {\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    FailedRecordCount: output.FailedRecordCount !== undefined && output.FailedRecordCount !== null ? output.FailedRecordCount : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context) : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordsResultEntry = function (output, context) {\n  return {\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    ErrorMessage: output.ErrorMessage !== undefined && output.ErrorMessage !== null ? output.ErrorMessage : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1PutRecordsResultEntryList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1PutRecordsResultEntry(entry, context);\n  });\n};\nvar deserializeAws_json1_1_Record = function (output, context) {\n  return {\n    ApproximateArrivalTimestamp: output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null ? new Date(Math.round(output.ApproximateArrivalTimestamp * 1000)) : undefined,\n    Data: output.Data !== undefined && output.Data !== null ? context.base64Decoder(output.Data) : undefined,\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    PartitionKey: output.PartitionKey !== undefined && output.PartitionKey !== null ? output.PartitionKey : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined\n  };\n};\nvar deserializeAws_json1_1RecordList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1_Record(entry, context);\n  });\n};\nvar deserializeAws_json1_1RegisterStreamConsumerOutput = function (output, context) {\n  return {\n    Consumer: output.Consumer !== undefined && output.Consumer !== null ? deserializeAws_json1_1Consumer(output.Consumer, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ResourceInUseException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\nvar deserializeAws_json1_1SequenceNumberRange = function (output, context) {\n  return {\n    EndingSequenceNumber: output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null ? output.EndingSequenceNumber : undefined,\n    StartingSequenceNumber: output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null ? output.StartingSequenceNumber : undefined\n  };\n};\nvar deserializeAws_json1_1Shard = function (output, context) {\n  return {\n    AdjacentParentShardId: output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null ? output.AdjacentParentShardId : undefined,\n    HashKeyRange: output.HashKeyRange !== undefined && output.HashKeyRange !== null ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context) : undefined,\n    ParentShardId: output.ParentShardId !== undefined && output.ParentShardId !== null ? output.ParentShardId : undefined,\n    SequenceNumberRange: output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null ? deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context) : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\nvar deserializeAws_json1_1ShardIdList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1ShardList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1Shard(entry, context);\n  });\n};\nvar deserializeAws_json1_1StreamDescription = function (output, context) {\n  return {\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context) : undefined,\n    HasMoreShards: output.HasMoreShards !== undefined && output.HasMoreShards !== null ? output.HasMoreShards : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null ? output.RetentionPeriodHours : undefined,\n    Shards: output.Shards !== undefined && output.Shards !== null ? deserializeAws_json1_1ShardList(output.Shards, context) : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null ? new Date(Math.round(output.StreamCreationTimestamp * 1000)) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined\n  };\n};\nvar deserializeAws_json1_1StreamDescriptionSummary = function (output, context) {\n  return {\n    ConsumerCount: output.ConsumerCount !== undefined && output.ConsumerCount !== null ? output.ConsumerCount : undefined,\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context) : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null ? output.RetentionPeriodHours : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null ? new Date(Math.round(output.StreamCreationTimestamp * 1000)) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined\n  };\n};\nvar deserializeAws_json1_1StreamNameList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1SubscribeToShardEvent = function (output, context) {\n  return {\n    ChildShards: output.ChildShards !== undefined && output.ChildShards !== null ? deserializeAws_json1_1ChildShardList(output.ChildShards, context) : undefined,\n    ContinuationSequenceNumber: output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null ? output.ContinuationSequenceNumber : undefined,\n    MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null ? output.MillisBehindLatest : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1RecordList(output.Records, context) : undefined\n  };\n};\nvar deserializeAws_json1_1SubscribeToShardEventStream = function (output, context) {\n  if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n    return {\n      InternalFailureException: deserializeAws_json1_1InternalFailureException(output.InternalFailureException, context)\n    };\n  }\n  if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n    return {\n      KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(output.KMSAccessDeniedException, context)\n    };\n  }\n  if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n    return {\n      KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context)\n    };\n  }\n  if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n    return {\n      KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(output.KMSInvalidStateException, context)\n    };\n  }\n  if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n    return {\n      KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context)\n    };\n  }\n  if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n    return {\n      KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context)\n    };\n  }\n  if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n    return {\n      KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context)\n    };\n  }\n  if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n    return {\n      ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context)\n    };\n  }\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(output.ResourceNotFoundException, context)\n    };\n  }\n  if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n    return {\n      SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nvar deserializeAws_json1_1SubscribeToShardOutput = function (output, context) {\n  return {\n    EventStream: output.EventStream !== undefined && output.EventStream !== null ? deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context) : undefined\n  };\n};\nvar deserializeAws_json1_1Tag = function (output, context) {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\nvar deserializeAws_json1_1TagList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1Tag(entry, context);\n  });\n};\nvar deserializeAws_json1_1UpdateShardCountOutput = function (output, context) {\n  return {\n    CurrentShardCount: output.CurrentShardCount !== undefined && output.CurrentShardCount !== null ? output.CurrentShardCount : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    TargetShardCount: output.TargetShardCount !== undefined && output.TargetShardCount !== null ? output.TargetShardCount : undefined\n  };\n};\nvar deserializeMetadata = function (output) {\n  var _a;\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          contents = {\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            path: path,\n            headers: headers\n          };\n          if (resolvedHostname !== undefined) {\n            contents.hostname = resolvedHostname;\n          }\n          if (body !== undefined) {\n            contents.body = body;\n          }\n          return [2 /*return*/, new __HttpRequest(contents)];\n      }\n    });\n  });\n};\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["HttpRequest","__HttpRequest","serializeAws_json1_1AddTagsToStreamCommand","input","context","headers","body","JSON","stringify","serializeAws_json1_1AddTagsToStreamInput","buildHttpRpcRequest","undefined","serializeAws_json1_1CreateStreamCommand","serializeAws_json1_1CreateStreamInput","serializeAws_json1_1DecreaseStreamRetentionPeriodCommand","serializeAws_json1_1DecreaseStreamRetentionPeriodInput","serializeAws_json1_1DeleteStreamCommand","serializeAws_json1_1DeleteStreamInput","serializeAws_json1_1DeregisterStreamConsumerCommand","serializeAws_json1_1DeregisterStreamConsumerInput","serializeAws_json1_1DescribeLimitsCommand","serializeAws_json1_1DescribeLimitsInput","serializeAws_json1_1DescribeStreamCommand","serializeAws_json1_1DescribeStreamInput","serializeAws_json1_1DescribeStreamConsumerCommand","serializeAws_json1_1DescribeStreamConsumerInput","serializeAws_json1_1DescribeStreamSummaryCommand","serializeAws_json1_1DescribeStreamSummaryInput","serializeAws_json1_1DisableEnhancedMonitoringCommand","serializeAws_json1_1DisableEnhancedMonitoringInput","serializeAws_json1_1EnableEnhancedMonitoringCommand","serializeAws_json1_1EnableEnhancedMonitoringInput","serializeAws_json1_1GetRecordsCommand","serializeAws_json1_1GetRecordsInput","serializeAws_json1_1GetShardIteratorCommand","serializeAws_json1_1GetShardIteratorInput","serializeAws_json1_1IncreaseStreamRetentionPeriodCommand","serializeAws_json1_1IncreaseStreamRetentionPeriodInput","serializeAws_json1_1ListShardsCommand","serializeAws_json1_1ListShardsInput","serializeAws_json1_1ListStreamConsumersCommand","serializeAws_json1_1ListStreamConsumersInput","serializeAws_json1_1ListStreamsCommand","serializeAws_json1_1ListStreamsInput","serializeAws_json1_1ListTagsForStreamCommand","serializeAws_json1_1ListTagsForStreamInput","serializeAws_json1_1MergeShardsCommand","serializeAws_json1_1MergeShardsInput","serializeAws_json1_1PutRecordCommand","serializeAws_json1_1PutRecordInput","serializeAws_json1_1PutRecordsCommand","serializeAws_json1_1PutRecordsInput","serializeAws_json1_1RegisterStreamConsumerCommand","serializeAws_json1_1RegisterStreamConsumerInput","serializeAws_json1_1RemoveTagsFromStreamCommand","serializeAws_json1_1RemoveTagsFromStreamInput","serializeAws_json1_1SplitShardCommand","serializeAws_json1_1SplitShardInput","serializeAws_json1_1StartStreamEncryptionCommand","serializeAws_json1_1StartStreamEncryptionInput","serializeAws_json1_1StopStreamEncryptionCommand","serializeAws_json1_1StopStreamEncryptionInput","serializeAws_json1_1SubscribeToShardCommand","serializeAws_json1_1SubscribeToShardInput","serializeAws_json1_1UpdateShardCountCommand","serializeAws_json1_1UpdateShardCountInput","deserializeAws_json1_1AddTagsToStreamCommand","output","statusCode","deserializeAws_json1_1AddTagsToStreamCommandError","collectBody","_a","response","$metadata","deserializeMetadata","Promise","resolve","parseBody","parsedOutput","_g","_h","errorCode","loadRestJsonErrorCode","_b","deserializeAws_json1_1InvalidArgumentExceptionResponse","name","deserializeAws_json1_1LimitExceededExceptionResponse","deserializeAws_json1_1ResourceInUseExceptionResponse","deserializeAws_json1_1ResourceNotFoundExceptionResponse","parsedBody","code","Code","__assign","message","Message","$fault","reject","Object","assign","Error","deserializeAws_json1_1CreateStreamCommand","deserializeAws_json1_1CreateStreamCommandError","_f","deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand","deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError","deserializeAws_json1_1DeleteStreamCommand","deserializeAws_json1_1DeleteStreamCommandError","deserializeAws_json1_1DeregisterStreamConsumerCommand","deserializeAws_json1_1DeregisterStreamConsumerCommandError","deserializeAws_json1_1DescribeLimitsCommand","deserializeAws_json1_1DescribeLimitsCommandError","data","contents","deserializeAws_json1_1DescribeLimitsOutput","_d","_e","deserializeAws_json1_1DescribeStreamCommand","deserializeAws_json1_1DescribeStreamCommandError","deserializeAws_json1_1DescribeStreamOutput","deserializeAws_json1_1DescribeStreamConsumerCommand","deserializeAws_json1_1DescribeStreamConsumerCommandError","deserializeAws_json1_1DescribeStreamConsumerOutput","deserializeAws_json1_1DescribeStreamSummaryCommand","deserializeAws_json1_1DescribeStreamSummaryCommandError","deserializeAws_json1_1DescribeStreamSummaryOutput","deserializeAws_json1_1DisableEnhancedMonitoringCommand","deserializeAws_json1_1DisableEnhancedMonitoringCommandError","deserializeAws_json1_1EnhancedMonitoringOutput","deserializeAws_json1_1EnableEnhancedMonitoringCommand","deserializeAws_json1_1EnableEnhancedMonitoringCommandError","deserializeAws_json1_1GetRecordsCommand","deserializeAws_json1_1GetRecordsCommandError","deserializeAws_json1_1GetRecordsOutput","_o","_p","deserializeAws_json1_1ExpiredIteratorExceptionResponse","deserializeAws_json1_1KMSAccessDeniedExceptionResponse","deserializeAws_json1_1KMSDisabledExceptionResponse","deserializeAws_json1_1KMSInvalidStateExceptionResponse","deserializeAws_json1_1KMSNotFoundExceptionResponse","deserializeAws_json1_1KMSOptInRequiredResponse","deserializeAws_json1_1KMSThrottlingExceptionResponse","deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse","deserializeAws_json1_1GetShardIteratorCommand","deserializeAws_json1_1GetShardIteratorCommandError","deserializeAws_json1_1GetShardIteratorOutput","deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand","deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError","deserializeAws_json1_1ListShardsCommand","deserializeAws_json1_1ListShardsCommandError","deserializeAws_json1_1ListShardsOutput","_j","deserializeAws_json1_1ExpiredNextTokenExceptionResponse","deserializeAws_json1_1ListStreamConsumersCommand","deserializeAws_json1_1ListStreamConsumersCommandError","deserializeAws_json1_1ListStreamConsumersOutput","deserializeAws_json1_1ListStreamsCommand","deserializeAws_json1_1ListStreamsCommandError","deserializeAws_json1_1ListStreamsOutput","deserializeAws_json1_1ListTagsForStreamCommand","deserializeAws_json1_1ListTagsForStreamCommandError","deserializeAws_json1_1ListTagsForStreamOutput","deserializeAws_json1_1MergeShardsCommand","deserializeAws_json1_1MergeShardsCommandError","deserializeAws_json1_1PutRecordCommand","deserializeAws_json1_1PutRecordCommandError","deserializeAws_json1_1PutRecordOutput","_m","deserializeAws_json1_1PutRecordsCommand","deserializeAws_json1_1PutRecordsCommandError","deserializeAws_json1_1PutRecordsOutput","deserializeAws_json1_1RegisterStreamConsumerCommand","deserializeAws_json1_1RegisterStreamConsumerCommandError","deserializeAws_json1_1RegisterStreamConsumerOutput","deserializeAws_json1_1RemoveTagsFromStreamCommand","deserializeAws_json1_1RemoveTagsFromStreamCommandError","deserializeAws_json1_1SplitShardCommand","deserializeAws_json1_1SplitShardCommandError","deserializeAws_json1_1StartStreamEncryptionCommand","deserializeAws_json1_1StartStreamEncryptionCommandError","deserializeAws_json1_1StopStreamEncryptionCommand","deserializeAws_json1_1StopStreamEncryptionCommandError","deserializeAws_json1_1SubscribeToShardCommand","deserializeAws_json1_1SubscribeToShardCommandError","deserializeAws_json1_1SubscribeToShardOutput","deserializeAws_json1_1UpdateShardCountCommand","deserializeAws_json1_1UpdateShardCountCommandError","deserializeAws_json1_1UpdateShardCountOutput","deserialized","deserializeAws_json1_1ExpiredIteratorException","deserializeAws_json1_1ExpiredNextTokenException","deserializeAws_json1_1InvalidArgumentException","deserializeAws_json1_1KMSAccessDeniedException","deserializeAws_json1_1KMSDisabledException","deserializeAws_json1_1KMSInvalidStateException","deserializeAws_json1_1KMSNotFoundException","deserializeAws_json1_1KMSOptInRequired","deserializeAws_json1_1KMSThrottlingException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1ProvisionedThroughputExceededException","deserializeAws_json1_1ResourceInUseException","deserializeAws_json1_1ResourceNotFoundException","StreamName","Tags","serializeAws_json1_1TagMap","ShardCount","RetentionPeriodHours","EnforceConsumerDeletion","ConsumerARN","ConsumerName","StreamARN","ExclusiveStartShardId","Limit","ShardLevelMetrics","serializeAws_json1_1MetricsNameList","ShardIterator","ShardId","ShardIteratorType","StartingSequenceNumber","Timestamp","Math","round","getTime","MaxResults","NextToken","ShardFilter","serializeAws_json1_1ShardFilter","StreamCreationTimestamp","ExclusiveStartStreamName","ExclusiveStartTagKey","AdjacentShardToMerge","ShardToMerge","filter","e","map","entry","Data","base64Encoder","ExplicitHashKey","PartitionKey","SequenceNumberForOrdering","Records","serializeAws_json1_1PutRecordsRequestEntryList","serializeAws_json1_1PutRecordsRequestEntry","TagKeys","serializeAws_json1_1TagKeyList","Type","NewStartingHashKey","ShardToSplit","serializeAws_json1_1StartingPosition","SequenceNumber","EncryptionType","KeyId","StartingPosition","entries","reduce","acc","_c","key","value","ScalingType","TargetShardCount","deserializeAws_json1_1ChildShard","HashKeyRange","deserializeAws_json1_1HashKeyRange","ParentShards","deserializeAws_json1_1ShardIdList","deserializeAws_json1_1ChildShardList","deserializeAws_json1_1Consumer","ConsumerCreationTimestamp","Date","ConsumerStatus","deserializeAws_json1_1ConsumerDescription","deserializeAws_json1_1ConsumerList","OpenShardCount","ShardLimit","ConsumerDescription","StreamDescription","deserializeAws_json1_1StreamDescription","StreamDescriptionSummary","deserializeAws_json1_1StreamDescriptionSummary","deserializeAws_json1_1EnhancedMetrics","deserializeAws_json1_1MetricsNameList","deserializeAws_json1_1EnhancedMonitoringList","CurrentShardLevelMetrics","DesiredShardLevelMetrics","ChildShards","MillisBehindLatest","NextShardIterator","deserializeAws_json1_1RecordList","EndingHashKey","StartingHashKey","deserializeAws_json1_1InternalFailureException","Shards","deserializeAws_json1_1ShardList","Consumers","HasMoreStreams","StreamNames","deserializeAws_json1_1StreamNameList","HasMoreTags","deserializeAws_json1_1TagList","FailedRecordCount","deserializeAws_json1_1PutRecordsResultEntryList","deserializeAws_json1_1PutRecordsResultEntry","ErrorCode","ErrorMessage","deserializeAws_json1_1_Record","ApproximateArrivalTimestamp","base64Decoder","Consumer","deserializeAws_json1_1SequenceNumberRange","EndingSequenceNumber","deserializeAws_json1_1Shard","AdjacentParentShardId","ParentShardId","SequenceNumberRange","EnhancedMonitoring","HasMoreShards","StreamStatus","ConsumerCount","deserializeAws_json1_1SubscribeToShardEvent","ContinuationSequenceNumber","deserializeAws_json1_1SubscribeToShardEventStream","InternalFailureException","KMSAccessDeniedException","KMSDisabledException","KMSInvalidStateException","KMSNotFoundException","KMSOptInRequired","KMSThrottlingException","ResourceInUseException","ResourceNotFoundException","SubscribeToShardEvent","$unknown","EventStream","deserializeAws_json1_1Tag","Key","Value","CurrentShardCount","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","endpoint","hostname","protocol","port","method","encoded","length","parse","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-sdk/client-kinesis/protocols/Aws_json1_1.ts"],"sourcesContent":["import { AddTagsToStreamCommandInput, AddTagsToStreamCommandOutput } from \"../commands/AddTagsToStreamCommand\";\nimport { CreateStreamCommandInput, CreateStreamCommandOutput } from \"../commands/CreateStreamCommand\";\nimport {\n  DecreaseStreamRetentionPeriodCommandInput,\n  DecreaseStreamRetentionPeriodCommandOutput,\n} from \"../commands/DecreaseStreamRetentionPeriodCommand\";\nimport { DeleteStreamCommandInput, DeleteStreamCommandOutput } from \"../commands/DeleteStreamCommand\";\nimport {\n  DeregisterStreamConsumerCommandInput,\n  DeregisterStreamConsumerCommandOutput,\n} from \"../commands/DeregisterStreamConsumerCommand\";\nimport { DescribeLimitsCommandInput, DescribeLimitsCommandOutput } from \"../commands/DescribeLimitsCommand\";\nimport { DescribeStreamCommandInput, DescribeStreamCommandOutput } from \"../commands/DescribeStreamCommand\";\nimport {\n  DescribeStreamConsumerCommandInput,\n  DescribeStreamConsumerCommandOutput,\n} from \"../commands/DescribeStreamConsumerCommand\";\nimport {\n  DescribeStreamSummaryCommandInput,\n  DescribeStreamSummaryCommandOutput,\n} from \"../commands/DescribeStreamSummaryCommand\";\nimport {\n  DisableEnhancedMonitoringCommandInput,\n  DisableEnhancedMonitoringCommandOutput,\n} from \"../commands/DisableEnhancedMonitoringCommand\";\nimport {\n  EnableEnhancedMonitoringCommandInput,\n  EnableEnhancedMonitoringCommandOutput,\n} from \"../commands/EnableEnhancedMonitoringCommand\";\nimport { GetRecordsCommandInput, GetRecordsCommandOutput } from \"../commands/GetRecordsCommand\";\nimport { GetShardIteratorCommandInput, GetShardIteratorCommandOutput } from \"../commands/GetShardIteratorCommand\";\nimport {\n  IncreaseStreamRetentionPeriodCommandInput,\n  IncreaseStreamRetentionPeriodCommandOutput,\n} from \"../commands/IncreaseStreamRetentionPeriodCommand\";\nimport { ListShardsCommandInput, ListShardsCommandOutput } from \"../commands/ListShardsCommand\";\nimport {\n  ListStreamConsumersCommandInput,\n  ListStreamConsumersCommandOutput,\n} from \"../commands/ListStreamConsumersCommand\";\nimport { ListStreamsCommandInput, ListStreamsCommandOutput } from \"../commands/ListStreamsCommand\";\nimport { ListTagsForStreamCommandInput, ListTagsForStreamCommandOutput } from \"../commands/ListTagsForStreamCommand\";\nimport { MergeShardsCommandInput, MergeShardsCommandOutput } from \"../commands/MergeShardsCommand\";\nimport { PutRecordCommandInput, PutRecordCommandOutput } from \"../commands/PutRecordCommand\";\nimport { PutRecordsCommandInput, PutRecordsCommandOutput } from \"../commands/PutRecordsCommand\";\nimport {\n  RegisterStreamConsumerCommandInput,\n  RegisterStreamConsumerCommandOutput,\n} from \"../commands/RegisterStreamConsumerCommand\";\nimport {\n  RemoveTagsFromStreamCommandInput,\n  RemoveTagsFromStreamCommandOutput,\n} from \"../commands/RemoveTagsFromStreamCommand\";\nimport { SplitShardCommandInput, SplitShardCommandOutput } from \"../commands/SplitShardCommand\";\nimport {\n  StartStreamEncryptionCommandInput,\n  StartStreamEncryptionCommandOutput,\n} from \"../commands/StartStreamEncryptionCommand\";\nimport {\n  StopStreamEncryptionCommandInput,\n  StopStreamEncryptionCommandOutput,\n} from \"../commands/StopStreamEncryptionCommand\";\nimport { SubscribeToShardCommandInput, SubscribeToShardCommandOutput } from \"../commands/SubscribeToShardCommand\";\nimport { UpdateShardCountCommandInput, UpdateShardCountCommandOutput } from \"../commands/UpdateShardCountCommand\";\nimport {\n  AddTagsToStreamInput,\n  ChildShard,\n  Consumer,\n  ConsumerDescription,\n  CreateStreamInput,\n  DecreaseStreamRetentionPeriodInput,\n  DeleteStreamInput,\n  DeregisterStreamConsumerInput,\n  DescribeLimitsInput,\n  DescribeLimitsOutput,\n  DescribeStreamConsumerInput,\n  DescribeStreamConsumerOutput,\n  DescribeStreamInput,\n  DescribeStreamOutput,\n  DescribeStreamSummaryInput,\n  DescribeStreamSummaryOutput,\n  DisableEnhancedMonitoringInput,\n  EnableEnhancedMonitoringInput,\n  EnhancedMetrics,\n  EnhancedMonitoringOutput,\n  ExpiredIteratorException,\n  ExpiredNextTokenException,\n  GetRecordsInput,\n  GetRecordsOutput,\n  GetShardIteratorInput,\n  GetShardIteratorOutput,\n  HashKeyRange,\n  IncreaseStreamRetentionPeriodInput,\n  InternalFailureException,\n  InvalidArgumentException,\n  KMSAccessDeniedException,\n  KMSDisabledException,\n  KMSInvalidStateException,\n  KMSNotFoundException,\n  KMSOptInRequired,\n  KMSThrottlingException,\n  LimitExceededException,\n  ListShardsInput,\n  ListShardsOutput,\n  ListStreamConsumersInput,\n  ListStreamConsumersOutput,\n  ListStreamsInput,\n  ListStreamsOutput,\n  ListTagsForStreamInput,\n  ListTagsForStreamOutput,\n  MergeShardsInput,\n  MetricsName,\n  ProvisionedThroughputExceededException,\n  PutRecordInput,\n  PutRecordOutput,\n  PutRecordsInput,\n  PutRecordsOutput,\n  PutRecordsRequestEntry,\n  PutRecordsResultEntry,\n  RegisterStreamConsumerInput,\n  RegisterStreamConsumerOutput,\n  RemoveTagsFromStreamInput,\n  ResourceInUseException,\n  ResourceNotFoundException,\n  SequenceNumberRange,\n  Shard,\n  ShardFilter,\n  SplitShardInput,\n  StartStreamEncryptionInput,\n  StartingPosition,\n  StopStreamEncryptionInput,\n  StreamDescription,\n  StreamDescriptionSummary,\n  SubscribeToShardEvent,\n  SubscribeToShardEventStream,\n  SubscribeToShardInput,\n  SubscribeToShardOutput,\n  Tag,\n  UpdateShardCountInput,\n  UpdateShardCountOutput,\n  _Record,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_json1_1AddTagsToStreamCommand = async (\n  input: AddTagsToStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.AddTagsToStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CreateStreamCommand = async (\n  input: CreateStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.CreateStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DecreaseStreamRetentionPeriodCommand = async (\n  input: DecreaseStreamRetentionPeriodCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DecreaseStreamRetentionPeriod\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteStreamCommand = async (\n  input: DeleteStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DeleteStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeregisterStreamConsumerCommand = async (\n  input: DeregisterStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DeregisterStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeLimitsCommand = async (\n  input: DescribeLimitsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeLimits\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamCommand = async (\n  input: DescribeStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamConsumerCommand = async (\n  input: DescribeStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamSummaryCommand = async (\n  input: DescribeStreamSummaryCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeStreamSummary\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DisableEnhancedMonitoringCommand = async (\n  input: DisableEnhancedMonitoringCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DisableEnhancedMonitoring\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1EnableEnhancedMonitoringCommand = async (\n  input: EnableEnhancedMonitoringCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.EnableEnhancedMonitoring\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetRecordsCommand = async (\n  input: GetRecordsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.GetRecords\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetShardIteratorCommand = async (\n  input: GetShardIteratorCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.GetShardIterator\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1IncreaseStreamRetentionPeriodCommand = async (\n  input: IncreaseStreamRetentionPeriodCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.IncreaseStreamRetentionPeriod\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListShardsCommand = async (\n  input: ListShardsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListShards\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListStreamConsumersCommand = async (\n  input: ListStreamConsumersCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListStreamConsumers\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListStreamsCommand = async (\n  input: ListStreamsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListStreams\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTagsForStreamCommand = async (\n  input: ListTagsForStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListTagsForStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1MergeShardsCommand = async (\n  input: MergeShardsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.MergeShards\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutRecordCommand = async (\n  input: PutRecordCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.PutRecord\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutRecordsCommand = async (\n  input: PutRecordsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.PutRecords\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1RegisterStreamConsumerCommand = async (\n  input: RegisterStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.RegisterStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1RemoveTagsFromStreamCommand = async (\n  input: RemoveTagsFromStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.RemoveTagsFromStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1SplitShardCommand = async (\n  input: SplitShardCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.SplitShard\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartStreamEncryptionCommand = async (\n  input: StartStreamEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.StartStreamEncryption\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StopStreamEncryptionCommand = async (\n  input: StopStreamEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.StopStreamEncryption\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1SubscribeToShardCommand = async (\n  input: SubscribeToShardCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.SubscribeToShard\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UpdateShardCountCommand = async (\n  input: UpdateShardCountCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.UpdateShardCount\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1AddTagsToStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AddTagsToStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1AddTagsToStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: AddTagsToStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1AddTagsToStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AddTagsToStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CreateStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: CreateStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DecreaseStreamRetentionPeriodCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DecreaseStreamRetentionPeriodCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DecreaseStreamRetentionPeriodCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeregisterStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeregisterStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeregisterStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeregisterStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeregisterStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeLimitsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLimitsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeLimitsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n  const response: DescribeLimitsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeLimitsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLimitsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeStreamCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n  const response: DescribeStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n  const response: DescribeStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamSummaryCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamSummaryCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n  const response: DescribeStreamSummaryCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamSummaryCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamSummaryCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DisableEnhancedMonitoringCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisableEnhancedMonitoringCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n  const response: DisableEnhancedMonitoringCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DisableEnhancedMonitoringCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisableEnhancedMonitoringCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1EnableEnhancedMonitoringCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<EnableEnhancedMonitoringCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n  const response: EnableEnhancedMonitoringCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1EnableEnhancedMonitoringCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<EnableEnhancedMonitoringCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetRecordsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecordsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetRecordsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n  const response: GetRecordsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetRecordsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecordsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExpiredIteratorException\":\n    case \"com.amazonaws.kinesis#ExpiredIteratorException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetShardIteratorCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetShardIteratorCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetShardIteratorCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n  const response: GetShardIteratorCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetShardIteratorCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetShardIteratorCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<IncreaseStreamRetentionPeriodCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: IncreaseStreamRetentionPeriodCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<IncreaseStreamRetentionPeriodCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListShardsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListShardsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListShardsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListShardsOutput(data, context);\n  const response: ListShardsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListShardsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListShardsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExpiredNextTokenException\":\n    case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListStreamConsumersCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamConsumersCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListStreamConsumersCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n  const response: ListStreamConsumersCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListStreamConsumersCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamConsumersCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExpiredNextTokenException\":\n    case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListStreamsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListStreamsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n  const response: ListStreamsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListStreamsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTagsForStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTagsForStreamCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n  const response: ListTagsForStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTagsForStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1MergeShardsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeShardsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1MergeShardsCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: MergeShardsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1MergeShardsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeShardsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutRecordCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutRecordCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutRecordOutput(data, context);\n  const response: PutRecordCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutRecordCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutRecordsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutRecordsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n  const response: PutRecordsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutRecordsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1RegisterStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RegisterStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n  const response: RegisterStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1RegisterStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RegisterStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1RemoveTagsFromStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveTagsFromStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: RemoveTagsFromStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1RemoveTagsFromStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveTagsFromStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1SplitShardCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SplitShardCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SplitShardCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: SplitShardCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SplitShardCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SplitShardCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartStreamEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartStreamEncryptionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StartStreamEncryptionCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: StartStreamEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartStreamEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartStreamEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StopStreamEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopStreamEncryptionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StopStreamEncryptionCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: StopStreamEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StopStreamEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopStreamEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1SubscribeToShardCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SubscribeToShardCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SubscribeToShardCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n  const response: SubscribeToShardCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SubscribeToShardCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SubscribeToShardCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UpdateShardCountCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateShardCountCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateShardCountCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n  const response: UpdateShardCountCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UpdateShardCountCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateShardCountCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1ExpiredIteratorExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ExpiredIteratorException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ExpiredIteratorException(body, context);\n  const contents: ExpiredIteratorException = {\n    name: \"ExpiredIteratorException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ExpiredNextTokenExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ExpiredNextTokenException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n  const contents: ExpiredNextTokenException = {\n    name: \"ExpiredNextTokenException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidArgumentExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidArgumentException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidArgumentException(body, context);\n  const contents: InvalidArgumentException = {\n    name: \"InvalidArgumentException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSAccessDeniedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSAccessDeniedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n  const contents: KMSAccessDeniedException = {\n    name: \"KMSAccessDeniedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSDisabledExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSDisabledException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSDisabledException(body, context);\n  const contents: KMSDisabledException = {\n    name: \"KMSDisabledException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSInvalidStateExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSInvalidStateException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSInvalidStateException(body, context);\n  const contents: KMSInvalidStateException = {\n    name: \"KMSInvalidStateException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSNotFoundException(body, context);\n  const contents: KMSNotFoundException = {\n    name: \"KMSNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSOptInRequiredResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSOptInRequired> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSOptInRequired(body, context);\n  const contents: KMSOptInRequired = {\n    name: \"KMSOptInRequired\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSThrottlingExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSThrottlingException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSThrottlingException(body, context);\n  const contents: KMSThrottlingException = {\n    name: \"KMSThrottlingException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ProvisionedThroughputExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n  const contents: ProvisionedThroughputExceededException = {\n    name: \"ProvisionedThroughputExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceInUseExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceInUseException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceInUseException(body, context);\n  const contents: ResourceInUseException = {\n    name: \"ResourceInUseException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1AddTagsToStreamInput = (input: AddTagsToStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.Tags !== undefined && input.Tags !== null && { Tags: serializeAws_json1_1TagMap(input.Tags, context) }),\n  };\n};\n\nconst serializeAws_json1_1CreateStreamInput = (input: CreateStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardCount !== undefined && input.ShardCount !== null && { ShardCount: input.ShardCount }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DecreaseStreamRetentionPeriodInput = (\n  input: DecreaseStreamRetentionPeriodInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.RetentionPeriodHours !== undefined &&\n      input.RetentionPeriodHours !== null && { RetentionPeriodHours: input.RetentionPeriodHours }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteStreamInput = (input: DeleteStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.EnforceConsumerDeletion !== undefined &&\n      input.EnforceConsumerDeletion !== null && { EnforceConsumerDeletion: input.EnforceConsumerDeletion }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeregisterStreamConsumerInput = (\n  input: DeregisterStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && input.ConsumerARN !== null && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ConsumerName !== undefined && input.ConsumerName !== null && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1DescribeLimitsInput = (input: DescribeLimitsInput, context: __SerdeContext): any => {\n  return {};\n};\n\nconst serializeAws_json1_1DescribeStreamConsumerInput = (\n  input: DescribeStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && input.ConsumerARN !== null && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ConsumerName !== undefined && input.ConsumerName !== null && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1DescribeStreamInput = (input: DescribeStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartShardId !== undefined &&\n      input.ExclusiveStartShardId !== null && { ExclusiveStartShardId: input.ExclusiveStartShardId }),\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DescribeStreamSummaryInput = (\n  input: DescribeStreamSummaryInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DisableEnhancedMonitoringInput = (\n  input: DisableEnhancedMonitoringInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ShardLevelMetrics !== undefined &&\n      input.ShardLevelMetrics !== null && {\n        ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context),\n      }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1EnableEnhancedMonitoringInput = (\n  input: EnableEnhancedMonitoringInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ShardLevelMetrics !== undefined &&\n      input.ShardLevelMetrics !== null && {\n        ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context),\n      }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1GetRecordsInput = (input: GetRecordsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n    ...(input.ShardIterator !== undefined && input.ShardIterator !== null && { ShardIterator: input.ShardIterator }),\n  };\n};\n\nconst serializeAws_json1_1GetShardIteratorInput = (input: GetShardIteratorInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardId !== undefined && input.ShardId !== null && { ShardId: input.ShardId }),\n    ...(input.ShardIteratorType !== undefined &&\n      input.ShardIteratorType !== null && { ShardIteratorType: input.ShardIteratorType }),\n    ...(input.StartingSequenceNumber !== undefined &&\n      input.StartingSequenceNumber !== null && { StartingSequenceNumber: input.StartingSequenceNumber }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.Timestamp !== undefined &&\n      input.Timestamp !== null && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n  };\n};\n\nconst serializeAws_json1_1IncreaseStreamRetentionPeriodInput = (\n  input: IncreaseStreamRetentionPeriodInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.RetentionPeriodHours !== undefined &&\n      input.RetentionPeriodHours !== null && { RetentionPeriodHours: input.RetentionPeriodHours }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1ListShardsInput = (input: ListShardsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartShardId !== undefined &&\n      input.ExclusiveStartShardId !== null && { ExclusiveStartShardId: input.ExclusiveStartShardId }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n    ...(input.ShardFilter !== undefined &&\n      input.ShardFilter !== null && { ShardFilter: serializeAws_json1_1ShardFilter(input.ShardFilter, context) }),\n    ...(input.StreamCreationTimestamp !== undefined &&\n      input.StreamCreationTimestamp !== null && {\n        StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000),\n      }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1ListStreamConsumersInput = (\n  input: ListStreamConsumersInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n    ...(input.StreamCreationTimestamp !== undefined &&\n      input.StreamCreationTimestamp !== null && {\n        StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000),\n      }),\n  };\n};\n\nconst serializeAws_json1_1ListStreamsInput = (input: ListStreamsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartStreamName !== undefined &&\n      input.ExclusiveStartStreamName !== null && { ExclusiveStartStreamName: input.ExclusiveStartStreamName }),\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n  };\n};\n\nconst serializeAws_json1_1ListTagsForStreamInput = (input: ListTagsForStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartTagKey !== undefined &&\n      input.ExclusiveStartTagKey !== null && { ExclusiveStartTagKey: input.ExclusiveStartTagKey }),\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1MergeShardsInput = (input: MergeShardsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.AdjacentShardToMerge !== undefined &&\n      input.AdjacentShardToMerge !== null && { AdjacentShardToMerge: input.AdjacentShardToMerge }),\n    ...(input.ShardToMerge !== undefined && input.ShardToMerge !== null && { ShardToMerge: input.ShardToMerge }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1MetricsNameList = (input: (MetricsName | string)[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1PutRecordInput = (input: PutRecordInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: context.base64Encoder(input.Data) }),\n    ...(input.ExplicitHashKey !== undefined &&\n      input.ExplicitHashKey !== null && { ExplicitHashKey: input.ExplicitHashKey }),\n    ...(input.PartitionKey !== undefined && input.PartitionKey !== null && { PartitionKey: input.PartitionKey }),\n    ...(input.SequenceNumberForOrdering !== undefined &&\n      input.SequenceNumberForOrdering !== null && { SequenceNumberForOrdering: input.SequenceNumberForOrdering }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsInput = (input: PutRecordsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Records !== undefined &&\n      input.Records !== null && { Records: serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context) }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsRequestEntry = (input: PutRecordsRequestEntry, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: context.base64Encoder(input.Data) }),\n    ...(input.ExplicitHashKey !== undefined &&\n      input.ExplicitHashKey !== null && { ExplicitHashKey: input.ExplicitHashKey }),\n    ...(input.PartitionKey !== undefined && input.PartitionKey !== null && { PartitionKey: input.PartitionKey }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsRequestEntryList = (\n  input: PutRecordsRequestEntry[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1PutRecordsRequestEntry(entry, context);\n    });\n};\n\nconst serializeAws_json1_1RegisterStreamConsumerInput = (\n  input: RegisterStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerName !== undefined && input.ConsumerName !== null && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1RemoveTagsFromStreamInput = (\n  input: RemoveTagsFromStreamInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.TagKeys !== undefined &&\n      input.TagKeys !== null && { TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context) }),\n  };\n};\n\nconst serializeAws_json1_1ShardFilter = (input: ShardFilter, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardId !== undefined && input.ShardId !== null && { ShardId: input.ShardId }),\n    ...(input.Timestamp !== undefined &&\n      input.Timestamp !== null && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1SplitShardInput = (input: SplitShardInput, context: __SerdeContext): any => {\n  return {\n    ...(input.NewStartingHashKey !== undefined &&\n      input.NewStartingHashKey !== null && { NewStartingHashKey: input.NewStartingHashKey }),\n    ...(input.ShardToSplit !== undefined && input.ShardToSplit !== null && { ShardToSplit: input.ShardToSplit }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1StartingPosition = (input: StartingPosition, context: __SerdeContext): any => {\n  return {\n    ...(input.SequenceNumber !== undefined &&\n      input.SequenceNumber !== null && { SequenceNumber: input.SequenceNumber }),\n    ...(input.Timestamp !== undefined &&\n      input.Timestamp !== null && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1StartStreamEncryptionInput = (\n  input: StartStreamEncryptionInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.EncryptionType !== undefined &&\n      input.EncryptionType !== null && { EncryptionType: input.EncryptionType }),\n    ...(input.KeyId !== undefined && input.KeyId !== null && { KeyId: input.KeyId }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1StopStreamEncryptionInput = (\n  input: StopStreamEncryptionInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.EncryptionType !== undefined &&\n      input.EncryptionType !== null && { EncryptionType: input.EncryptionType }),\n    ...(input.KeyId !== undefined && input.KeyId !== null && { KeyId: input.KeyId }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1SubscribeToShardInput = (input: SubscribeToShardInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && input.ConsumerARN !== null && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ShardId !== undefined && input.ShardId !== null && { ShardId: input.ShardId }),\n    ...(input.StartingPosition !== undefined &&\n      input.StartingPosition !== null && {\n        StartingPosition: serializeAws_json1_1StartingPosition(input.StartingPosition, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1TagKeyList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1TagMap = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1UpdateShardCountInput = (input: UpdateShardCountInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ScalingType !== undefined && input.ScalingType !== null && { ScalingType: input.ScalingType }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.TargetShardCount !== undefined &&\n      input.TargetShardCount !== null && { TargetShardCount: input.TargetShardCount }),\n  };\n};\n\nconst deserializeAws_json1_1ChildShard = (output: any, context: __SerdeContext): ChildShard => {\n  return {\n    HashKeyRange:\n      output.HashKeyRange !== undefined && output.HashKeyRange !== null\n        ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context)\n        : undefined,\n    ParentShards:\n      output.ParentShards !== undefined && output.ParentShards !== null\n        ? deserializeAws_json1_1ShardIdList(output.ParentShards, context)\n        : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ChildShardList = (output: any, context: __SerdeContext): ChildShard[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ChildShard(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1Consumer = (output: any, context: __SerdeContext): Consumer => {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp:\n      output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null\n        ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000))\n        : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus:\n      output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConsumerDescription = (output: any, context: __SerdeContext): ConsumerDescription => {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp:\n      output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null\n        ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000))\n        : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus:\n      output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConsumerList = (output: any, context: __SerdeContext): Consumer[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Consumer(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1DescribeLimitsOutput = (output: any, context: __SerdeContext): DescribeLimitsOutput => {\n  return {\n    OpenShardCount:\n      output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    ShardLimit: output.ShardLimit !== undefined && output.ShardLimit !== null ? output.ShardLimit : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamConsumerOutput = (\n  output: any,\n  context: __SerdeContext\n): DescribeStreamConsumerOutput => {\n  return {\n    ConsumerDescription:\n      output.ConsumerDescription !== undefined && output.ConsumerDescription !== null\n        ? deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamOutput = (output: any, context: __SerdeContext): DescribeStreamOutput => {\n  return {\n    StreamDescription:\n      output.StreamDescription !== undefined && output.StreamDescription !== null\n        ? deserializeAws_json1_1StreamDescription(output.StreamDescription, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamSummaryOutput = (\n  output: any,\n  context: __SerdeContext\n): DescribeStreamSummaryOutput => {\n  return {\n    StreamDescriptionSummary:\n      output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null\n        ? deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EnhancedMetrics = (output: any, context: __SerdeContext): EnhancedMetrics => {\n  return {\n    ShardLevelMetrics:\n      output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EnhancedMonitoringList = (output: any, context: __SerdeContext): EnhancedMetrics[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1EnhancedMetrics(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1EnhancedMonitoringOutput = (\n  output: any,\n  context: __SerdeContext\n): EnhancedMonitoringOutput => {\n  return {\n    CurrentShardLevelMetrics:\n      output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context)\n        : undefined,\n    DesiredShardLevelMetrics:\n      output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context)\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExpiredIteratorException = (\n  output: any,\n  context: __SerdeContext\n): ExpiredIteratorException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExpiredNextTokenException = (\n  output: any,\n  context: __SerdeContext\n): ExpiredNextTokenException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetRecordsOutput = (output: any, context: __SerdeContext): GetRecordsOutput => {\n  return {\n    ChildShards:\n      output.ChildShards !== undefined && output.ChildShards !== null\n        ? deserializeAws_json1_1ChildShardList(output.ChildShards, context)\n        : undefined,\n    MillisBehindLatest:\n      output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null\n        ? output.MillisBehindLatest\n        : undefined,\n    NextShardIterator:\n      output.NextShardIterator !== undefined && output.NextShardIterator !== null\n        ? output.NextShardIterator\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1RecordList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetShardIteratorOutput = (output: any, context: __SerdeContext): GetShardIteratorOutput => {\n  return {\n    ShardIterator:\n      output.ShardIterator !== undefined && output.ShardIterator !== null ? output.ShardIterator : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1HashKeyRange = (output: any, context: __SerdeContext): HashKeyRange => {\n  return {\n    EndingHashKey:\n      output.EndingHashKey !== undefined && output.EndingHashKey !== null ? output.EndingHashKey : undefined,\n    StartingHashKey:\n      output.StartingHashKey !== undefined && output.StartingHashKey !== null ? output.StartingHashKey : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InternalFailureException = (\n  output: any,\n  context: __SerdeContext\n): InternalFailureException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidArgumentException = (\n  output: any,\n  context: __SerdeContext\n): InvalidArgumentException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSAccessDeniedException = (\n  output: any,\n  context: __SerdeContext\n): KMSAccessDeniedException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSDisabledException = (output: any, context: __SerdeContext): KMSDisabledException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSInvalidStateException = (\n  output: any,\n  context: __SerdeContext\n): KMSInvalidStateException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSNotFoundException = (output: any, context: __SerdeContext): KMSNotFoundException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSOptInRequired = (output: any, context: __SerdeContext): KMSOptInRequired => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSThrottlingException = (output: any, context: __SerdeContext): KMSThrottlingException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListShardsOutput = (output: any, context: __SerdeContext): ListShardsOutput => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    Shards:\n      output.Shards !== undefined && output.Shards !== null\n        ? deserializeAws_json1_1ShardList(output.Shards, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListStreamConsumersOutput = (\n  output: any,\n  context: __SerdeContext\n): ListStreamConsumersOutput => {\n  return {\n    Consumers:\n      output.Consumers !== undefined && output.Consumers !== null\n        ? deserializeAws_json1_1ConsumerList(output.Consumers, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListStreamsOutput = (output: any, context: __SerdeContext): ListStreamsOutput => {\n  return {\n    HasMoreStreams:\n      output.HasMoreStreams !== undefined && output.HasMoreStreams !== null ? output.HasMoreStreams : undefined,\n    StreamNames:\n      output.StreamNames !== undefined && output.StreamNames !== null\n        ? deserializeAws_json1_1StreamNameList(output.StreamNames, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTagsForStreamOutput = (\n  output: any,\n  context: __SerdeContext\n): ListTagsForStreamOutput => {\n  return {\n    HasMoreTags: output.HasMoreTags !== undefined && output.HasMoreTags !== null ? output.HasMoreTags : undefined,\n    Tags:\n      output.Tags !== undefined && output.Tags !== null\n        ? deserializeAws_json1_1TagList(output.Tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricsNameList = (output: any, context: __SerdeContext): (MetricsName | string)[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ProvisionedThroughputExceededException = (\n  output: any,\n  context: __SerdeContext\n): ProvisionedThroughputExceededException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordOutput = (output: any, context: __SerdeContext): PutRecordOutput => {\n  return {\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsOutput = (output: any, context: __SerdeContext): PutRecordsOutput => {\n  return {\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    FailedRecordCount:\n      output.FailedRecordCount !== undefined && output.FailedRecordCount !== null\n        ? output.FailedRecordCount\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsResultEntry = (output: any, context: __SerdeContext): PutRecordsResultEntry => {\n  return {\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    ErrorMessage: output.ErrorMessage !== undefined && output.ErrorMessage !== null ? output.ErrorMessage : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsResultEntryList = (\n  output: any,\n  context: __SerdeContext\n): PutRecordsResultEntry[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1PutRecordsResultEntry(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1_Record = (output: any, context: __SerdeContext): _Record => {\n  return {\n    ApproximateArrivalTimestamp:\n      output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null\n        ? new Date(Math.round(output.ApproximateArrivalTimestamp * 1000))\n        : undefined,\n    Data: output.Data !== undefined && output.Data !== null ? context.base64Decoder(output.Data) : undefined,\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    PartitionKey: output.PartitionKey !== undefined && output.PartitionKey !== null ? output.PartitionKey : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RecordList = (output: any, context: __SerdeContext): _Record[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1_Record(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1RegisterStreamConsumerOutput = (\n  output: any,\n  context: __SerdeContext\n): RegisterStreamConsumerOutput => {\n  return {\n    Consumer:\n      output.Consumer !== undefined && output.Consumer !== null\n        ? deserializeAws_json1_1Consumer(output.Consumer, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceInUseException = (output: any, context: __SerdeContext): ResourceInUseException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SequenceNumberRange = (output: any, context: __SerdeContext): SequenceNumberRange => {\n  return {\n    EndingSequenceNumber:\n      output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null\n        ? output.EndingSequenceNumber\n        : undefined,\n    StartingSequenceNumber:\n      output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null\n        ? output.StartingSequenceNumber\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Shard = (output: any, context: __SerdeContext): Shard => {\n  return {\n    AdjacentParentShardId:\n      output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null\n        ? output.AdjacentParentShardId\n        : undefined,\n    HashKeyRange:\n      output.HashKeyRange !== undefined && output.HashKeyRange !== null\n        ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context)\n        : undefined,\n    ParentShardId:\n      output.ParentShardId !== undefined && output.ParentShardId !== null ? output.ParentShardId : undefined,\n    SequenceNumberRange:\n      output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null\n        ? deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context)\n        : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ShardIdList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ShardList = (output: any, context: __SerdeContext): Shard[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Shard(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1StreamDescription = (output: any, context: __SerdeContext): StreamDescription => {\n  return {\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring:\n      output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null\n        ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context)\n        : undefined,\n    HasMoreShards:\n      output.HasMoreShards !== undefined && output.HasMoreShards !== null ? output.HasMoreShards : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    RetentionPeriodHours:\n      output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null\n        ? output.RetentionPeriodHours\n        : undefined,\n    Shards:\n      output.Shards !== undefined && output.Shards !== null\n        ? deserializeAws_json1_1ShardList(output.Shards, context)\n        : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp:\n      output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null\n        ? new Date(Math.round(output.StreamCreationTimestamp * 1000))\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StreamDescriptionSummary = (\n  output: any,\n  context: __SerdeContext\n): StreamDescriptionSummary => {\n  return {\n    ConsumerCount:\n      output.ConsumerCount !== undefined && output.ConsumerCount !== null ? output.ConsumerCount : undefined,\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring:\n      output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null\n        ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context)\n        : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    OpenShardCount:\n      output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    RetentionPeriodHours:\n      output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null\n        ? output.RetentionPeriodHours\n        : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp:\n      output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null\n        ? new Date(Math.round(output.StreamCreationTimestamp * 1000))\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StreamNameList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1SubscribeToShardEvent = (output: any, context: __SerdeContext): SubscribeToShardEvent => {\n  return {\n    ChildShards:\n      output.ChildShards !== undefined && output.ChildShards !== null\n        ? deserializeAws_json1_1ChildShardList(output.ChildShards, context)\n        : undefined,\n    ContinuationSequenceNumber:\n      output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null\n        ? output.ContinuationSequenceNumber\n        : undefined,\n    MillisBehindLatest:\n      output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null\n        ? output.MillisBehindLatest\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1RecordList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SubscribeToShardEventStream = (\n  output: any,\n  context: __SerdeContext\n): SubscribeToShardEventStream => {\n  if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n    return {\n      InternalFailureException: deserializeAws_json1_1InternalFailureException(\n        output.InternalFailureException,\n        context\n      ),\n    };\n  }\n  if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n    return {\n      KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(\n        output.KMSAccessDeniedException,\n        context\n      ),\n    };\n  }\n  if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n    return {\n      KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context),\n    };\n  }\n  if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n    return {\n      KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(\n        output.KMSInvalidStateException,\n        context\n      ),\n    };\n  }\n  if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n    return {\n      KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context),\n    };\n  }\n  if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n    return {\n      KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context),\n    };\n  }\n  if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n    return {\n      KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context),\n    };\n  }\n  if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n    return {\n      ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context),\n    };\n  }\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(\n        output.ResourceNotFoundException,\n        context\n      ),\n    };\n  }\n  if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n    return {\n      SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context),\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n};\n\nconst deserializeAws_json1_1SubscribeToShardOutput = (output: any, context: __SerdeContext): SubscribeToShardOutput => {\n  return {\n    EventStream:\n      output.EventStream !== undefined && output.EventStream !== null\n        ? deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Tag = (output: any, context: __SerdeContext): Tag => {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TagList = (output: any, context: __SerdeContext): Tag[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Tag(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1UpdateShardCountOutput = (output: any, context: __SerdeContext): UpdateShardCountOutput => {\n  return {\n    CurrentShardCount:\n      output.CurrentShardCount !== undefined && output.CurrentShardCount !== null\n        ? output.CurrentShardCount\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    TargetShardCount:\n      output.TargetShardCount !== undefined && output.TargetShardCount !== null ? output.TargetShardCount : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}