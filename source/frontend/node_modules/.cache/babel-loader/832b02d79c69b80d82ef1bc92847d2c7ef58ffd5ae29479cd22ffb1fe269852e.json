{"ast":null,"code":"import { __awaiter, __generator, __read, __spread } from \"tslib\";\nexport var retryMiddleware = function (options) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var _a;\n        return __generator(this, function (_b) {\n          if ((_a = options === null || options === void 0 ? void 0 : options.retryStrategy) === null || _a === void 0 ? void 0 : _a.mode) context.userAgent = __spread(context.userAgent || [], [[\"cfg/retry-mode\", options.retryStrategy.mode]]);\n          return [2 /*return*/, options.retryStrategy.retry(next, args)];\n        });\n      });\n    };\n  };\n};\nexport var retryMiddlewareOptions = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true\n};\nexport var getRetryPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"mappings":";AAaA,OAAO,IAAMA,eAAe,GAAG,UAACC,OAA4B;EAAK,iBAC/DC,IAAkC,EAClCC,OAAgC;IACC,iBACjCC,IAAmC;MAAA;;;UAEnC,UAAIH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,aAAa,0CAAEC,IAAI,EAC9BH,OAAO,CAACI,SAAS,YAAQJ,OAAO,CAACI,SAAS,IAAI,EAAE,EAAC,CAAE,CAAC,gBAAgB,EAAEN,OAAO,CAACI,aAAa,CAACC,IAAI,CAAC,EAAC;UACpG,sBAAOL,OAAO,CAACI,aAAa,CAACG,KAAK,CAACN,IAAI,EAAEE,IAAI,CAAC;;;KAC/C;EANkC,CAMlC;AATgE,CAShE;AAED,OAAO,IAAMK,sBAAsB,GAAqD;EACtFC,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,CAAC,OAAO,CAAC;EACfC,IAAI,EAAE,iBAAiB;EACvBC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE;CACX;AAED,OAAO,IAAMC,cAAc,GAAG,UAACd,OAA4B;EAA0B,OAAC;IACpFe,YAAY,EAAE,UAACC,WAAW;MACxBA,WAAW,CAACC,GAAG,CAAClB,eAAe,CAACC,OAAO,CAAC,EAAEQ,sBAAsB,CAAC;IACnE;GACD;AAJoF,CAInF","names":["retryMiddleware","options","next","context","args","retryStrategy","mode","userAgent","retry","retryMiddlewareOptions","name","tags","step","priority","override","getRetryPlugin","applyToStack","clientStack","add"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-sdk/middleware-retry/src/retryMiddleware.ts"],"sourcesContent":["import {\n  AbsoluteLocation,\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestHandlerOptions,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport const retryMiddleware = (options: RetryResolvedConfig) => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>,\n  context: HandlerExecutionContext\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => {\n  if (options?.retryStrategy?.mode)\n    context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", options.retryStrategy.mode]];\n  return options.retryStrategy.retry(next, args);\n};\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions & AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true,\n};\n\nexport const getRetryPlugin = (options: RetryResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  },\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}