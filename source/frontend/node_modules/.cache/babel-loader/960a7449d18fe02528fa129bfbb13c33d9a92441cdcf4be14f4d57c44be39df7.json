{"ast":null,"code":"/** These methods may break the react binding if called directly */\nconst skipMethods = ['setMaxBounds', 'setMinZoom', 'setMaxZoom', 'setMinPitch', 'setMaxPitch', 'setRenderWorldCopies', 'setProjection', 'setStyle', 'addSource', 'removeSource', 'addLayer', 'removeLayer', 'setLayerZoomRange', 'setFilter', 'setPaintProperty', 'setLayoutProperty', 'setLight', 'setTerrain', 'setFog', 'remove'];\nexport default function createRef(mapInstance, mapLib) {\n  if (!mapInstance) {\n    return null;\n  }\n  const map = mapInstance.map;\n  const result = {\n    getMap: () => map,\n    // Overwrite getters to use our shadow transform\n    getCenter: () => mapInstance.transform.center,\n    getZoom: () => mapInstance.transform.zoom,\n    getBearing: () => mapInstance.transform.bearing,\n    getPitch: () => mapInstance.transform.pitch,\n    getPadding: () => mapInstance.transform.padding,\n    getBounds: () => mapInstance.transform.getBounds(),\n    project: lnglat => {\n      return mapInstance.transform.locationPoint(mapLib.LngLat.convert(lnglat));\n    },\n    unproject: point => {\n      return mapInstance.transform.pointLocation(mapLib.Point.convert(point));\n    }\n  };\n  for (const key of getMethodNames(map)) {\n    // @ts-expect-error\n    if (!(key in result) && !skipMethods.includes(key)) {\n      result[key] = map[key].bind(map);\n    }\n  }\n  return result;\n}\nfunction getMethodNames(obj) {\n  const result = new Set();\n  let proto = obj;\n  while (proto) {\n    for (const key of Object.getOwnPropertyNames(proto)) {\n      if (key[0] !== '_' && typeof obj[key] === 'function' && key !== 'fire' && key !== 'setEventedParent') {\n        result.add(key);\n      }\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Array.from(result);\n}","map":{"version":3,"mappings":"AAGA;AACA,MAAMA,WAAW,GAAG,CAClB,cAAc,EACd,YAAY,EACZ,YAAY,EACZ,aAAa,EACb,aAAa,EACb,sBAAsB,EACtB,eAAe,EACf,UAAU,EACV,WAAW,EACX,cAAc,EACd,UAAU,EACV,aAAa,EACb,mBAAmB,EACnB,WAAW,EACX,kBAAkB,EAClB,mBAAmB,EACnB,UAAU,EACV,YAAY,EACZ,QAAQ,EACR,QAAQ,CACA;AAMV,eAAc,SAAUC,SAASA,CAACC,WAAmB,EAAEC,MAAW;EAChE,IAAI,CAACD,WAAW,EAAE;IAChB,OAAO,IAAI;;EAGb,MAAME,GAAG,GAAcF,WAAW,CAACE,GAAG;EACtC,MAAMC,MAAM,GAAQ;IAClBC,MAAM,EAAEA,MAAMF,GAAG;IAEjB;IACAG,SAAS,EAAEA,MAAML,WAAW,CAACM,SAAS,CAACC,MAAM;IAC7CC,OAAO,EAAEA,MAAMR,WAAW,CAACM,SAAS,CAACG,IAAI;IACzCC,UAAU,EAAEA,MAAMV,WAAW,CAACM,SAAS,CAACK,OAAO;IAC/CC,QAAQ,EAAEA,MAAMZ,WAAW,CAACM,SAAS,CAACO,KAAK;IAC3CC,UAAU,EAAEA,MAAMd,WAAW,CAACM,SAAS,CAACS,OAAO;IAC/CC,SAAS,EAAEA,MAAMhB,WAAW,CAACM,SAAS,CAACU,SAAS,EAAE;IAClDC,OAAO,EAAGC,MAAkB,IAAI;MAC9B,OAAOlB,WAAW,CAACM,SAAS,CAACa,aAAa,CAAClB,MAAM,CAACmB,MAAM,CAACC,OAAO,CAACH,MAAM,CAAC,CAAC;IAC3E,CAAC;IACDI,SAAS,EAAGC,KAAgB,IAAI;MAC9B,OAAOvB,WAAW,CAACM,SAAS,CAACkB,aAAa,CAACvB,MAAM,CAACwB,KAAK,CAACJ,OAAO,CAACE,KAAK,CAAC,CAAC;IACzE;GACD;EAED,KAAK,MAAMG,GAAG,IAAIC,cAAc,CAACzB,GAAG,CAAC,EAAE;IACrC;IACA,IAAI,EAAEwB,GAAG,IAAIvB,MAAM,CAAC,IAAI,CAACL,WAAW,CAAC8B,QAAQ,CAACF,GAAG,CAAC,EAAE;MAClDvB,MAAM,CAACuB,GAAG,CAAC,GAAGxB,GAAG,CAACwB,GAAG,CAAC,CAACG,IAAI,CAAC3B,GAAG,CAAC;;;EAIpC,OAAOC,MAAM;AACf;AAEA,SAASwB,cAAcA,CAACG,GAAG;EACzB,MAAM3B,MAAM,GAAG,IAAI4B,GAAG,EAAU;EAEhC,IAAIC,KAAK,GAAGF,GAAG;EACf,OAAOE,KAAK,EAAE;IACZ,KAAK,MAAMN,GAAG,IAAIO,MAAM,CAACC,mBAAmB,CAACF,KAAK,CAAC,EAAE;MACnD,IACEN,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IACd,OAAOI,GAAG,CAACJ,GAAG,CAAC,KAAK,UAAU,IAC9BA,GAAG,KAAK,MAAM,IACdA,GAAG,KAAK,kBAAkB,EAC1B;QACAvB,MAAM,CAACgC,GAAG,CAACT,GAAG,CAAC;;;IAGnBM,KAAK,GAAGC,MAAM,CAACG,cAAc,CAACJ,KAAK,CAAC;;EAEtC,OAAOK,KAAK,CAACC,IAAI,CAACnC,MAAM,CAAC;AAC3B","names":["skipMethods","createRef","mapInstance","mapLib","map","result","getMap","getCenter","transform","center","getZoom","zoom","getBearing","bearing","getPitch","pitch","getPadding","padding","getBounds","project","lnglat","locationPoint","LngLat","convert","unproject","point","pointLocation","Point","key","getMethodNames","includes","bind","obj","Set","proto","Object","getOwnPropertyNames","add","getPrototypeOf","Array","from"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/react-map-gl/src/mapbox/create-ref.ts"],"sourcesContent":["import type {MapboxMap, LngLatLike, PointLike} from '../types';\nimport type Mapbox from './mapbox';\n\n/** These methods may break the react binding if called directly */\nconst skipMethods = [\n  'setMaxBounds',\n  'setMinZoom',\n  'setMaxZoom',\n  'setMinPitch',\n  'setMaxPitch',\n  'setRenderWorldCopies',\n  'setProjection',\n  'setStyle',\n  'addSource',\n  'removeSource',\n  'addLayer',\n  'removeLayer',\n  'setLayerZoomRange',\n  'setFilter',\n  'setPaintProperty',\n  'setLayoutProperty',\n  'setLight',\n  'setTerrain',\n  'setFog',\n  'remove'\n] as const;\n\nexport type MapRef = {\n  getMap(): MapboxMap;\n} & Omit<MapboxMap, typeof skipMethods[number]>;\n\nexport default function createRef(mapInstance: Mapbox, mapLib: any): MapRef {\n  if (!mapInstance) {\n    return null;\n  }\n\n  const map: MapboxMap = mapInstance.map;\n  const result: any = {\n    getMap: () => map,\n\n    // Overwrite getters to use our shadow transform\n    getCenter: () => mapInstance.transform.center,\n    getZoom: () => mapInstance.transform.zoom,\n    getBearing: () => mapInstance.transform.bearing,\n    getPitch: () => mapInstance.transform.pitch,\n    getPadding: () => mapInstance.transform.padding,\n    getBounds: () => mapInstance.transform.getBounds(),\n    project: (lnglat: LngLatLike) => {\n      return mapInstance.transform.locationPoint(mapLib.LngLat.convert(lnglat));\n    },\n    unproject: (point: PointLike) => {\n      return mapInstance.transform.pointLocation(mapLib.Point.convert(point));\n    }\n  };\n\n  for (const key of getMethodNames(map)) {\n    // @ts-expect-error\n    if (!(key in result) && !skipMethods.includes(key)) {\n      result[key] = map[key].bind(map);\n    }\n  }\n\n  return result;\n}\n\nfunction getMethodNames(obj) {\n  const result = new Set<string>();\n\n  let proto = obj;\n  while (proto) {\n    for (const key of Object.getOwnPropertyNames(proto)) {\n      if (\n        key[0] !== '_' &&\n        typeof obj[key] === 'function' &&\n        key !== 'fire' &&\n        key !== 'setEventedParent'\n      ) {\n        result.add(key);\n      }\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Array.from(result);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}