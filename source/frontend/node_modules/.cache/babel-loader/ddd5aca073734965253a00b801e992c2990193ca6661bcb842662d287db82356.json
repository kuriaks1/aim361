{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { browserOrNode, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport noop from 'lodash/noop';\n// Per https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\nvar hidden;\nvar visibilityChange;\nvar isBrowser = browserOrNode().isBrowser;\nif (isBrowser && document) {\n  if (typeof document.hidden !== 'undefined') {\n    hidden = 'hidden';\n    visibilityChange = 'visibilitychange';\n  } else if (typeof document['msHidden'] !== 'undefined') {\n    hidden = 'msHidden';\n    visibilityChange = 'msvisibilitychange';\n  } else if (typeof document['webkitHidden'] !== 'undefined') {\n    hidden = 'webkitHidden';\n    visibilityChange = 'webkitvisibilitychange';\n  }\n}\nvar logger = new Logger('InAppMessagingSessionTracker');\nvar SessionTracker = /** @class */function () {\n  function SessionTracker(sessionStateChangeHandler) {\n    var _this = this;\n    if (sessionStateChangeHandler === void 0) {\n      sessionStateChangeHandler = noop;\n    }\n    this.start = function () {\n      if (isBrowser) {\n        document === null || document === void 0 ? void 0 : document.addEventListener(visibilityChange, _this.visibilityChangeHandler);\n      }\n      return _this.getSessionState();\n    };\n    this.end = function () {\n      if (isBrowser) {\n        document === null || document === void 0 ? void 0 : document.removeEventListener(visibilityChange, _this.visibilityChangeHandler);\n      }\n      return _this.getSessionState();\n    };\n    this.getSessionState = function () {\n      if (isBrowser && document && !document[hidden]) {\n        return 'started';\n      }\n      // If, for any reason, document is undefined the session will never start\n      return 'ended';\n    };\n    this.visibilityChangeHandler = function () {\n      if (!isBrowser || !document) {\n        return;\n      }\n      if (document[hidden]) {\n        logger.debug('App is now hidden');\n        _this.sessionStateChangeHandler('ended');\n      } else {\n        logger.debug('App is now visible');\n        _this.sessionStateChangeHandler('started');\n      }\n    };\n    this.sessionStateChangeHandler = sessionStateChangeHandler;\n  }\n  return SessionTracker;\n}();\nexport default SessionTracker;","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAASA,aAAa,EAAEC,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAC1E,OAAOC,IAAI,MAAM,aAAa;AAO9B;AACA,IAAIC,MAAc;AAClB,IAAIC,gBAAwB;AACpB,yCAAS;AAEjB,IAAIC,SAAS,IAAIC,QAAQ,EAAE;EAC1B,IAAI,OAAOA,QAAQ,CAACH,MAAM,KAAK,WAAW,EAAE;IAC3CA,MAAM,GAAG,QAAQ;IACjBC,gBAAgB,GAAG,kBAAkB;GACrC,MAAM,IAAI,OAAOE,QAAQ,CAAC,UAAU,CAAC,KAAK,WAAW,EAAE;IACvDH,MAAM,GAAG,UAAU;IACnBC,gBAAgB,GAAG,oBAAoB;GACvC,MAAM,IAAI,OAAOE,QAAQ,CAAC,cAAc,CAAC,KAAK,WAAW,EAAE;IAC3DH,MAAM,GAAG,cAAc;IACvBC,gBAAgB,GAAG,wBAAwB;;;AAI7C,IAAMG,MAAM,GAAG,IAAIN,MAAM,CAAC,8BAA8B,CAAC;AAEzD;EAGC,wBAAYO,yBAA2D;IAAvE;IAAY;MAAAA,gCAA2D;IAAA;IAIvE,UAAK,GAAG;MACP,IAAIH,SAAS,EAAE;QACdC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,gBAAgB,CACzBL,gBAAgB,EAChBM,KAAI,CAACC,uBAAuB;;MAG9B,OAAOD,KAAI,CAACE,eAAe,EAAE;IAC9B,CAAC;IAED,QAAG,GAAG;MACL,IAAIP,SAAS,EAAE;QACdC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEO,mBAAmB,CAC5BT,gBAAgB,EAChBM,KAAI,CAACC,uBAAuB;;MAG9B,OAAOD,KAAI,CAACE,eAAe,EAAE;IAC9B,CAAC;IAEO,oBAAe,GAAG;MACzB,IAAIP,SAAS,IAAIC,QAAQ,IAAI,CAACA,QAAQ,CAACH,MAAM,CAAC,EAAE;QAC/C,OAAO,SAAS;;MAEjB;MACA,OAAO,OAAO;IACf,CAAC;IAEO,4BAAuB,GAAG;MACjC,IAAI,CAACE,SAAS,IAAI,CAACC,QAAQ,EAAE;QAC5B;;MAED,IAAIA,QAAQ,CAACH,MAAM,CAAC,EAAE;QACrBI,MAAM,CAACO,KAAK,CAAC,mBAAmB,CAAC;QACjCJ,KAAI,CAACF,yBAAyB,CAAC,OAAO,CAAC;OACvC,MAAM;QACND,MAAM,CAACO,KAAK,CAAC,oBAAoB,CAAC;QAClCJ,KAAI,CAACF,yBAAyB,CAAC,SAAS,CAAC;;IAE3C,CAAC;IA1CA,IAAI,CAACA,yBAAyB,GAAGA,yBAAyB;EAC3D;EA0CD,qBAAC;AAAD,CAAC,CA/CD","names":["browserOrNode","ConsoleLogger","Logger","noop","hidden","visibilityChange","isBrowser","document","logger","sessionStateChangeHandler","addEventListener","_this","visibilityChangeHandler","getSessionState","removeEventListener","debug"],"sources":["/Workshop/product-metadata/guidance-for-generating-product-descriptions-with-bedrock/source/frontend/node_modules/@aws-amplify/notifications/src/InAppMessaging/SessionTracker/SessionTracker.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { browserOrNode, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport noop from 'lodash/noop';\nimport {\n\tSessionState,\n\tSessionStateChangeHandler,\n\tSessionTrackerInterface,\n} from './types';\n\n// Per https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\nlet hidden: string;\nlet visibilityChange: string;\nconst { isBrowser } = browserOrNode();\n\nif (isBrowser && document) {\n\tif (typeof document.hidden !== 'undefined') {\n\t\thidden = 'hidden';\n\t\tvisibilityChange = 'visibilitychange';\n\t} else if (typeof document['msHidden'] !== 'undefined') {\n\t\thidden = 'msHidden';\n\t\tvisibilityChange = 'msvisibilitychange';\n\t} else if (typeof document['webkitHidden'] !== 'undefined') {\n\t\thidden = 'webkitHidden';\n\t\tvisibilityChange = 'webkitvisibilitychange';\n\t}\n}\n\nconst logger = new Logger('InAppMessagingSessionTracker');\n\nexport default class SessionTracker implements SessionTrackerInterface {\n\tprivate sessionStateChangeHandler: SessionStateChangeHandler;\n\n\tconstructor(sessionStateChangeHandler: SessionStateChangeHandler = noop) {\n\t\tthis.sessionStateChangeHandler = sessionStateChangeHandler;\n\t}\n\n\tstart = (): SessionState => {\n\t\tif (isBrowser) {\n\t\t\tdocument?.addEventListener(\n\t\t\t\tvisibilityChange,\n\t\t\t\tthis.visibilityChangeHandler\n\t\t\t);\n\t\t}\n\t\treturn this.getSessionState();\n\t};\n\n\tend = (): SessionState => {\n\t\tif (isBrowser) {\n\t\t\tdocument?.removeEventListener(\n\t\t\t\tvisibilityChange,\n\t\t\t\tthis.visibilityChangeHandler\n\t\t\t);\n\t\t}\n\t\treturn this.getSessionState();\n\t};\n\n\tprivate getSessionState = (): SessionState => {\n\t\tif (isBrowser && document && !document[hidden]) {\n\t\t\treturn 'started';\n\t\t}\n\t\t// If, for any reason, document is undefined the session will never start\n\t\treturn 'ended';\n\t};\n\n\tprivate visibilityChangeHandler = () => {\n\t\tif (!isBrowser || !document) {\n\t\t\treturn;\n\t\t}\n\t\tif (document[hidden]) {\n\t\t\tlogger.debug('App is now hidden');\n\t\t\tthis.sessionStateChangeHandler('ended');\n\t\t} else {\n\t\t\tlogger.debug('App is now visible');\n\t\t\tthis.sessionStateChangeHandler('started');\n\t\t}\n\t};\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}